// VDO.Ninja SDK v1.3.17
const MEDIA_STREAM_TRACK_ENABLED_DESCRIPTOR="undefined"!=typeof MediaStreamTrack&&MediaStreamTrack?.prototype?Object.getOwnPropertyDescriptor(MediaStreamTrack.prototype,"enabled"):null,OUTBOUND_VIDEO_STOP_MUTE_DELAY_MS=500;!function(e){"use strict";class t extends EventTarget{static get VERSION(){return"1.3.17"}_sanitizeStreamID(e){if(!e||"string"!=typeof e)return e=this._generateStreamID(),this._log("No streamID provided, generated:",e),e;if((e=e.trim()).length<1)return e=this._generateStreamID(),this._log("Empty streamID provided, generated:",e),e;const t=e.replace(/[\W]+/g,"_");if(e!==t&&this._log("StreamID contained non-alphanumeric characters, sanitized:",t),t.length>64){const e=t.substring(0,64);return this._log("StreamID too long, truncated to 64 characters:",e),e}return t}_sanitizeRoomName(e){if(!1===e||null==e)return!1;if("string"!=typeof e&&(e=String(e)),""===(e=e.trim()))return"";const t=e.replace(/[\W]+/g,"_");if(e!==t&&this._log("Room name contained non-alphanumeric characters, sanitized:",t),t.length>30){const e=t.substring(0,30);return this._log("Room name too long, truncated to 30 characters:",e),e}return t}_sanitizeLabel(e){if(!e||"string"!=typeof e)return"";const t=document.createElement("div");t.innerText=e;let i=t.textContent||t.innerText||"";return i=i.substring(0,Math.min(i.length,100)),i.trim()}_sanitizePassword(e){if(!1===e||null===e)return e;if(void 0===e||""===e)return"";if("string"!=typeof e&&(e=String(e)),(e=e.trim()).length<1)return this._log("Empty password provided"),"";return encodeURIComponent(e)}_getEffectivePassword(){if(!1===this.password||null===this.password)return null;if(void 0===this.password||""===this.password)return"someEncryptionKey123";let e=this.password;return"string"!=typeof e&&(e=String(e)),e=e.trim(),e.length<1?"someEncryptionKey123":e}constructor(e={}){if(super(),this.version=t.VERSION,this.host=e.host||e.wss||"wss://wss.vdo.ninja",this.room=this._sanitizeRoomName(e.room||null),!1===e.password?this.password=!1:void 0===e.password||null===e.password||""===e.password?this.password=this._sanitizePassword("someEncryptionKey123"):this.password=this._sanitizePassword(e.password),this.debug=e.debug||!1,this._pendingStreamID=e.streamID||null,this._pendingLabel=e.label||null,this._pendingInfo={},e.label&&(this._pendingInfo.label=this._sanitizeLabel(e.label)),e.meta&&(this._pendingInfo.meta=this._sanitizeLabel(e.meta)),e.order&&(this._pendingInfo.order=this._sanitizeLabel(e.order)),"boolean"==typeof e.broadcast&&(this._pendingInfo.broadcast=!!e.broadcast),"boolean"==typeof e.allowdrawing&&(this._pendingInfo.allowdrawing=!!e.allowdrawing),"boolean"==typeof e.iframe&&(this._pendingInfo.iframe=!!e.iframe),"boolean"==typeof e.widget&&(this._pendingInfo.widget=!!e.widget),"boolean"==typeof e.allowmidi&&(this._pendingInfo.allowmidi=!!e.allowmidi),"boolean"==typeof e.allowresources&&(this._pendingInfo.allowresources=!!e.allowresources),"boolean"!=typeof e.allowchunked&&"number"!=typeof e.allowchunked||(this._pendingInfo.allowchunked=e.allowchunked),e.info&&"object"==typeof e.info){const t=e.info;t.label&&(this._pendingInfo.label=this._sanitizeLabel(t.label),this._pendingLabel=this._pendingInfo.label),t.meta&&(this._pendingInfo.meta=this._sanitizeLabel(t.meta)),t.order&&(this._pendingInfo.order=this._sanitizeLabel(t.order)),"boolean"==typeof t.broadcast&&(this._pendingInfo.broadcast=!!t.broadcast),"boolean"==typeof t.allowdrawing&&(this._pendingInfo.allowdrawing=!!t.allowdrawing),"boolean"==typeof t.iframe&&(this._pendingInfo.iframe=!!t.iframe),"boolean"==typeof t.widget&&(this._pendingInfo.widget=!!t.widget),"boolean"==typeof t.allowmidi&&(this._pendingInfo.allowmidi=!!t.allowmidi),"boolean"==typeof t.allowresources&&(this._pendingInfo.allowresources=!!t.allowresources),"boolean"!=typeof t.allowchunked&&"number"!=typeof t.allowchunked||(this._pendingInfo.allowchunked=t.allowchunked)}this._pendingRoomID=e.roomid||e.roomID||null,this._publishMediaConfig=null,this.on=(e,t)=>{try{this.addEventListener(e,t)}catch(e){}return this},this.off=(e,t)=>{try{this.removeEventListener(e,t)}catch(e){}return this},this.once=(e,t)=>{try{const i=s=>{this.removeEventListener(e,i),t(s)};this.addEventListener(e,i)}catch(e){}return this},this.state={connected:!1,room:null,streamID:null,uuid:null,roomJoined:!1,publishing:!1},this.signaling=null,this.connections=new Map,this._pendingViews=new Map,this._failedViewerConnections=new Map,this._intentionalDisconnect=!1,this._passwordHash=null,this._passwordHashPromise=null,this._passwordHashKey=null,this._passwordHashPromiseKey=null,this._viewHandlers=new Map,this._sessionIDs={},this._remoteSessionIDs={},this._streamToUUID={},this.messageHandlers=new Map,this.streams=new Map,this.localStream=null,this.videoElement=e.videoElement||null,this.turnServers=void 0!==e.turnServers?e.turnServers:null,this.forceTURN=e.forceTURN||!1,this.turnCacheTTL=e.turnCacheTTL||5,this.stunServers=e.stunServers||[{urls:"stun:stun.l.google.com:19302"},{urls:"stun:stun.cloudflare.com:3478"}],this.configuration=e.configuration||{iceServers:this.stunServers.slice()},this._turnPromise=null,this._turnList=null,this._reconnectAttempts=0,this._maxReconnectAttempts=e.maxReconnectAttempts||5,this._reconnectDelay=e.reconnectDelay||1e3,this._reconnectTimer=null,this._isReconnecting=!1,this._intentionalDisconnect=!1,this._viewRetryTimers=new Map,this._viewRetryInterval=9e5,this._outboundVideoMonitors=new Map,this._pendingVideoMuteFinalizers=new Set,this.salt=e.salt||"vdo.ninja",this._saltProvidedViaOptions=!!e.salt,this.autoPingViewer=e.autoPingViewer||!1,this.autoPingInterval=e.autoPingInterval||1e4,this._setupCryptoUtils(),this._log("SDK initialized with host:",this.host),this._addPropertyHelpers()}_addPropertyHelpers(){Object.defineProperty(this,"streamID",{get:function(){return this.state.streamID},set:function(e){console.warn(`[VDONinja SDK] Setting streamID as a property is not recommended.\nPlease use the streamID option in publish() or announce() methods:\n  await vdo.publish(stream, { streamID: '${e}' })\n  await vdo.announce({ streamID: '${e}' })\nThe streamID has been stored and will be used if not specified in the method call.`),this._pendingStreamID=e},configurable:!0}),Object.defineProperty(this,"roomid",{get:function(){return this.room},set:function(e){console.warn(`[VDONinja SDK] Setting roomid as a property is not recommended.\nPlease use the room option in connect() or joinRoom() methods:\n  await vdo.connect({ room: '${e}' })\n  await vdo.joinRoom({ room: '${e}' })\nThe room has been stored and will be used if not specified in the method call.`),this._pendingRoomID=e,this.room=this._sanitizeRoomName(e)},configurable:!0}),Object.defineProperty(this,"label",{get:function(){return this._pendingLabel},set:function(e){console.warn(`[VDONinja SDK] Setting label as a property is not recommended.\nPlease use the label option in publish() or announce() methods:\n  await vdo.publish(stream, { label: '${e}' })\n  await vdo.announce({ label: '${e}' })\nThe label has been stored and will be used if not specified in the method call.`),this._pendingLabel=e},configurable:!0})}async connect(e={}){if(this.connections||(this.connections=new Map),this.state||(this.state={}),this._viewHandlers||(this._viewHandlers=new Map),this._sessionIDs||(this._sessionIDs={}),this._remoteSessionIDs||(this._remoteSessionIDs={}),this._streamToUUID||(this._streamToUUID={}),this._pendingViews||(this._pendingViews=new Map),this.messageHandlers||(this.messageHandlers=new Map),this.streams||(this.streams=new Map),this._viewRetryTimers||(this._viewRetryTimers=new Map),!this.state.connected)return this._intentionalDisconnect=!1,e.host&&(this.host=e.host),e.room?this.room=this._sanitizeRoomName(e.room):this._pendingRoomID&&(this.room=this._sanitizeRoomName(this._pendingRoomID)),void 0!==e.password&&(!1===e.password?this.password=!1:null===e.password||""===e.password?this.password=this._sanitizePassword("someEncryptionKey123"):this.password=this._sanitizePassword(e.password)),void 0!==e.datamode&&(console.warn("[VDONinja SDK] connect({ datamode }) is not used. Establish data channels via announce() (publisher) and/or view() (viewer)."),this._emit("alert",{message:"connect({ datamode }) has no effect. Use announce()/view() to create data channels."})),new Promise((e,t)=>{try{this.signaling=new WebSocket(this.host),this.signaling.onopen=()=>{this._log("WebSocket connected"),this.state.connected=!0,this._reconnectAttempts=0,this._emit("connected"),e()},this.signaling.onmessage=async e=>{try{const t=JSON.parse(e.data);this._logMessage("IN",t,"WebSocket"),await this._handleSignalingMessage(t)}catch(e){this._log("Error parsing message:",e)}},this.signaling.onerror=e=>{this._log("WebSocket error:",e),this._emit("error",{error:"WebSocket error",details:e}),t(e)},this.signaling.onclose=()=>{this._log("WebSocket closed"),this.state.connected=!1,this.state.roomJoined=!1,this.state.publishing=!1,this._emit("disconnected"),!this._intentionalDisconnect&&this._reconnectAttempts<this._maxReconnectAttempts&&this._attemptReconnect()}}catch(e){this._log("Connection error:",e),t(e)}});this._log("Already connected")}disconnect(){this._log("Disconnecting..."),this._intentionalDisconnect=!0,this._reconnectTimer&&(clearTimeout(this._reconnectTimer),this._reconnectTimer=null),this._log("Connections count:",this.connections.size);const e=[];for(const[t,i]of this.connections)for(const s of["viewer","publisher"]){const n=i[s];if(n&&(this._log(`Connection ${t}:${s}: dataChannel=${!!n.dataChannel}, state=${n.dataChannel?.readyState}`),n.dataChannel&&"open"===n.dataChannel.readyState))try{const i={bye:!0};n.dataChannel.send(JSON.stringify(i)),this._log("Sent bye message to:",t,"type:",s);const o=new Promise(e=>{const t=()=>{n.dataChannel&&"open"===n.dataChannel.readyState&&0!==n.dataChannel.bufferedAmount?setTimeout(t,10):e()};t()}),a=new Promise(e=>setTimeout(e,100));e.push(Promise.race([o,a]))}catch(e){this._log("Error sending bye message:",e)}}Promise.all(e).then(()=>{for(const[e,t]of this.connections)for(const e of["viewer","publisher"]){const i=t[e];i&&(this._stopPingMonitoring(i),i.pc&&i.pc.close())}this.connections.clear(),this._clearAllVideoTrackMonitors();for(const[e,t]of this._viewRetryTimers)clearTimeout(t);this._viewRetryTimers.clear(),this.signaling&&(this.signaling.close(),this.signaling=null),this.state={connected:!1,room:null,streamID:null,uuid:null,roomJoined:!1,publishing:!1},this._emit("disconnected")})}async _attemptReconnect(){if(this._isReconnecting)return;this._isReconnecting=!0,this._reconnectAttempts++;const e=Math.min(this._reconnectDelay*Math.pow(2,this._reconnectAttempts-1),3e4);this._log(`Attempting reconnection ${this._reconnectAttempts}/${this._maxReconnectAttempts} in ${e}ms`),this._emit("reconnecting",{attempt:this._reconnectAttempts,maxAttempts:this._maxReconnectAttempts}),this._reconnectTimer=setTimeout(async()=>{try{await this.connect(),this.state.room&&await this.joinRoom({room:this.state.room,password:this.password}),this.state.publishing&&this.localStream&&await this.publish(this.localStream,{streamID:this.state.streamID}),this._emit("reconnected"),this._isReconnecting=!1}catch(e){this._log("Reconnection failed:",e),this._isReconnecting=!1,this._reconnectAttempts>=this._maxReconnectAttempts?this._emit("reconnectFailed"):this._attemptReconnect()}},e)}getStreams(){const e=[],t=Date.now();for(const[i,s]of this.streams)e.push({streamID:i,firstSeen:s.firstSeen,lastSeen:s.lastSeen,timeSinceLastSeen:t-s.lastSeen,uuid:s.uuid,state:s.state,viewRequestTime:s.viewRequestTime,waitingTime:"pending"===s.state&&s.viewRequestTime?t-s.viewRequestTime:null});return e.sort((e,t)=>t.lastSeen-e.lastSeen)}getStreamInfo(e){const t=this.streams.get(e);if(!t)return null;const i=Date.now();return{streamID:e,firstSeen:t.firstSeen,lastSeen:t.lastSeen,timeSinceLastSeen:i-t.lastSeen,uuid:t.uuid,state:t.state,viewRequestTime:t.viewRequestTime,waitingTime:"pending"===t.state&&t.viewRequestTime?i-t.viewRequestTime:null}}async joinRoom(e={}){if(!this.state.connected)throw new Error("Not connected to signaling server");if(this.state.roomJoined)return this._log("Already joined a room on this connection"),Promise.resolve();const t=this._sanitizeRoomName(e.room||this.room),i=this._sanitizePassword(void 0!==e.password?e.password:this.password);if(!t)throw new Error("Room name is required");this.password=""===i?this._sanitizePassword("someEncryptionKey123"):i;let s=t;const n=this._getEffectivePassword();null!==n&&(s=await this._hashRoom(t,n)),this._log("Joining room:",t,"with hash:",s),void 0!==e.role&&(console.warn("[VDONinja SDK] joinRoom({ role }) is not used. Your role is determined by calling announce() (publisher) and/or view() (viewer)."),this._emit("alert",{message:"joinRoom({ role }) is ignored. Use announce() to publish and view() to view."}));const o={request:"joinroom",roomid:s};return e.claim&&(o.claim=!0),this._sendMessageWS(o),new Promise((e,i)=>{const s=setTimeout(()=>{i(new Error("Room join timeout"))},1e4),n=i=>{clearTimeout(s),this.removeEventListener("_roomJoined",n),this.state.room=t,this.state.roomJoined=!0,this._emit("roomJoined",{room:t}),e()};this.addEventListener("_roomJoined",n)})}leaveRoom(){if(!this.state.room)return void this._log("Not in a room");this._sendMessageWS({leave:!0});const e=this.state.room;this.state.room=null,this.state.roomJoined=!1,this._emit("roomLeft",{room:e})}async publish(e,t={}){if(!this.state.connected)throw new Error("Not connected to signaling server");if(!(e&&e instanceof MediaStream))throw new Error("Valid MediaStream required");if(this.state.publishing)throw new Error("Already publishing on this connection. Disconnect and reconnect to publish a different stream.");this.localStream=e;const i=await this._extractPublisherMediaOptions(t);i&&(this._publishMediaConfig=i),this._publishMediaConfig&&await this._applyLocalMediaPreferences(this.localStream,this._publishMediaConfig);const s=this._sanitizeStreamID(t.streamID||this._pendingStreamID)||this._generateStreamID();if(t.label&&(this._pendingLabel=this._sanitizeLabel(t.label)),this._pendingInfo=this._pendingInfo||{},t.label&&(this._pendingInfo.label=this._sanitizeLabel(t.label)),t.meta&&(this._pendingInfo.meta=this._sanitizeLabel(t.meta)),t.order&&(this._pendingInfo.order=this._sanitizeLabel(t.order)),"boolean"==typeof t.broadcast&&(this._pendingInfo.broadcast=!!t.broadcast),"boolean"==typeof t.allowdrawing&&(this._pendingInfo.allowdrawing=!!t.allowdrawing),"boolean"==typeof t.iframe&&(this._pendingInfo.iframe=!!t.iframe),"boolean"==typeof t.widget&&(this._pendingInfo.widget=!!t.widget),"boolean"==typeof t.allowmidi&&(this._pendingInfo.allowmidi=!!t.allowmidi),"boolean"==typeof t.allowresources&&(this._pendingInfo.allowresources=!!t.allowresources),"boolean"!=typeof t.allowchunked&&"number"!=typeof t.allowchunked||(this._pendingInfo.allowchunked=t.allowchunked),t.info&&"object"==typeof t.info){const e=t.info;e.label&&(this._pendingInfo.label=this._sanitizeLabel(e.label),this._pendingLabel=this._pendingInfo.label),e.meta&&(this._pendingInfo.meta=this._sanitizeLabel(e.meta)),e.order&&(this._pendingInfo.order=this._sanitizeLabel(e.order)),"boolean"==typeof e.broadcast&&(this._pendingInfo.broadcast=!!e.broadcast),"boolean"==typeof e.allowdrawing&&(this._pendingInfo.allowdrawing=!!e.allowdrawing),"boolean"==typeof e.iframe&&(this._pendingInfo.iframe=!!e.iframe),"boolean"==typeof e.widget&&(this._pendingInfo.widget=!!e.widget),"boolean"==typeof e.allowmidi&&(this._pendingInfo.allowmidi=!!e.allowmidi),"boolean"==typeof e.allowresources&&(this._pendingInfo.allowresources=!!e.allowresources),"boolean"!=typeof e.allowchunked&&"number"!=typeof e.allowchunked||(this._pendingInfo.allowchunked=e.allowchunked)}!this.state.roomJoined&&t.room&&await this.joinRoom({room:t.room,password:void 0!==t.password?t.password:this.password});let n=s;{const e=this._getEffectivePassword();null!==e&&(n=await this._hashStreamID(s,e))}if(this._log("Publishing with streamID:",s,"as:",n),this.state.streamID=s,this.state.publishing=!0,this._clearAllVideoTrackMonitors(),this.localStream){(this.localStream.getVideoTracks?this.localStream.getVideoTracks():[]).forEach(e=>this._monitorOutboundVideoTrack(e))}const o={request:"seed",streamID:n};if(this._log("Sending seed message for streamID:",n),this._sendMessageWS(o),this._emit("publishing",{streamID:s,hashedStreamID:n}),this.streams){const e=Date.now();this.streams.set(s,{firstSeen:e,lastSeen:e,uuid:this.state.uuid,state:"connected"})}return s}async announce(e={}){if(!this.state.connected)throw new Error("Not connected to signaling server");if(void 0!==e.role&&(console.warn("[VDONinja SDK] announce({ role }) is not used. Remove role and just call announce()."),this._emit("alert",{message:"announce({ role }) is ignored. Remove role and call announce({ streamID })."})),e.label&&(this._pendingLabel=this._sanitizeLabel(e.label)),this._pendingInfo=this._pendingInfo||{},e.label&&(this._pendingInfo.label=this._sanitizeLabel(e.label)),e.meta&&(this._pendingInfo.meta=this._sanitizeLabel(e.meta)),e.order&&(this._pendingInfo.order=this._sanitizeLabel(e.order)),"boolean"==typeof e.broadcast&&(this._pendingInfo.broadcast=!!e.broadcast),"boolean"==typeof e.allowdrawing&&(this._pendingInfo.allowdrawing=!!e.allowdrawing),"boolean"==typeof e.iframe&&(this._pendingInfo.iframe=!!e.iframe),"boolean"==typeof e.widget&&(this._pendingInfo.widget=!!e.widget),"boolean"==typeof e.allowmidi&&(this._pendingInfo.allowmidi=!!e.allowmidi),"boolean"==typeof e.allowresources&&(this._pendingInfo.allowresources=!!e.allowresources),"boolean"!=typeof e.allowchunked&&"number"!=typeof e.allowchunked||(this._pendingInfo.allowchunked=e.allowchunked),e.info&&"object"==typeof e.info){const t=e.info;t.label&&(this._pendingInfo.label=this._sanitizeLabel(t.label),this._pendingLabel=this._pendingInfo.label),t.meta&&(this._pendingInfo.meta=this._sanitizeLabel(t.meta)),t.order&&(this._pendingInfo.order=this._sanitizeLabel(t.order)),"boolean"==typeof t.broadcast&&(this._pendingInfo.broadcast=!!t.broadcast),"boolean"==typeof t.allowdrawing&&(this._pendingInfo.allowdrawing=!!t.allowdrawing),"boolean"==typeof t.iframe&&(this._pendingInfo.iframe=!!t.iframe),"boolean"==typeof t.widget&&(this._pendingInfo.widget=!!t.widget),"boolean"==typeof t.allowmidi&&(this._pendingInfo.allowmidi=!!t.allowmidi),"boolean"==typeof t.allowresources&&(this._pendingInfo.allowresources=!!t.allowresources),"boolean"!=typeof t.allowchunked&&"number"!=typeof t.allowchunked||(this._pendingInfo.allowchunked=t.allowchunked)}const t=this._sanitizeStreamID(e.streamID||this._pendingStreamID)||this._generateStreamID();!this.state.roomJoined&&e.room&&await this.joinRoom({room:e.room,password:void 0!==e.password?e.password:this.password});let i=t;{const e=this._getEffectivePassword();null!==e&&(i=await this._hashStreamID(t,e))}this._log("Announcing availability with streamID:",t,"as:",i),this.state.streamID=t,this.state.publishing=!0;const s={request:"seed",streamID:i};return this._sendMessageWS(s),this._emit("publishing",{streamID:t,hashedStreamID:i,dataOnly:!0}),t}stopPublishing(){if(!this.state.publishing)return void this._log("Not currently publishing");if(this._outboundVideoMonitors&&this._outboundVideoMonitors.size)for(const e of this._outboundVideoMonitors.values())this._sendVideoMutedState(e.track,!0,null,"stopPublishing");const e=[];for(const[t,i]of this.connections){const s=i.publisher;if(s&&s.dataChannel&&"open"===s.dataChannel.readyState)try{const i={bye:!0};this._sendDataInternal(i,t,null,"publisher"),this._log("Sent bye message to viewer:",t);const n=new Promise(e=>{const t=()=>{s.dataChannel&&"open"===s.dataChannel.readyState&&0!==s.dataChannel.bufferedAmount?setTimeout(t,10):e()};t()}),o=new Promise(e=>setTimeout(e,100));e.push(Promise.race([n,o]))}catch(e){this._log("Error sending bye message:",e)}}Promise.all(e).then(()=>{for(const[e,t]of this.connections){const i=t.publisher;i&&(this._stopPingMonitoring(i),i.pc&&i.pc.close(),delete t.publisher,t.viewer||t.publisher||this.connections.delete(e))}this._clearAllVideoTrackMonitors(),this.localStream&&(this.localStream.getTracks().forEach(e=>e.stop()),this.localStream=null),this.state.publishing=!1,this.state.streamID=null,this._emit("publishingStopped")})}async view(e,t={}){if(!this.state.connected)throw new Error("Not connected to signaling server");e=this._sanitizeStreamID(e),t.label&&(t.label=this._sanitizeLabel(t.label)),this._log("View request for:",e,"with options:",t);const i=Date.now(),s=this.streams.get(e);this.streams.set(e,{firstSeen:s?.firstSeen||i,lastSeen:i,uuid:s?.uuid||null,state:"pending",viewRequestTime:i});try{let i=e;{const t=this._getEffectivePassword();null!==t&&(i=await this._hashStreamID(e,t))}const s=t&&!0===t.dataOnly?{...t,audio:!1,video:!1}:t||{};this._pendingViews.set(e,{options:s,timestamp:Date.now(),hashedStreamID:i}),this._lastViewOptions=this._lastViewOptions||{},this._lastViewOptions[e]=s;const n={request:"play",streamID:i};if(!this.signaling||this.signaling.readyState!==WebSocket.OPEN)throw new Error("WebSocket not connected");return this._logMessage("OUT",n,"WebSocket"),this.signaling.send(JSON.stringify(n)),this._log("Sent view request for:",e,"as:",i),new Promise((i,s)=>{const n=setInterval(()=>{for(const[t,s]of this.connections){const t=s.viewer;if(t&&t.streamID===e&&t.pc)return clearInterval(n),clearTimeout(o),this._pendingViews.delete(e),void i(t.pc)}},100),o=setTimeout(()=>{clearInterval(n),this._log(`Stream ${e} not available yet, will retry in 15 minutes`),this._setupViewRetry(e,t),i(null)},15e3)})}catch(t){throw this._log("Error in view:",t.message),this._pendingViews.delete(e),t}}_setupViewRetry(e,t){this._viewRetryTimers.has(e)&&clearTimeout(this._viewRetryTimers.get(e));const i=setTimeout(()=>{this._log(`Retrying view for stream: ${e}`),this._viewRetryTimers.delete(e),this.state.connected&&!this._intentionalDisconnect&&this.view(e,t).catch(e=>{this._log("Retry view error:",e.message)})},this._viewRetryInterval);this._viewRetryTimers.set(e,i)}stopViewing(e){this._intentionalDisconnect=!0,this._viewRetryTimers.has(e)&&(clearTimeout(this._viewRetryTimers.get(e)),this._viewRetryTimers.delete(e)),this._pendingViews.delete(e),this._failedViewerConnections&&this._failedViewerConnections.delete(e);const t=[],i=this._getConnections({streamID:e,type:"viewer"});for(const e of i)if(e.dataChannel&&"open"===e.dataChannel.readyState)try{const i={bye:!0};e.dataChannel.send(JSON.stringify(i)),this._log("Sent bye message to publisher:",e.uuid);const s=new Promise(t=>{const i=()=>{e.dataChannel&&"open"===e.dataChannel.readyState&&0!==e.dataChannel.bufferedAmount?setTimeout(i,10):t()};i()}),n=new Promise(e=>setTimeout(e,100));t.push(Promise.race([s,n]))}catch(e){this._log("Error sending bye message:",e)}Promise.all(t).then(()=>{for(const[t,i]of this.connections){const s=i.viewer;s&&s.streamID===e&&(s.pc&&s.pc.close(),delete i.viewer,i.viewer||i.publisher||this.connections.delete(t))}this._emit("viewingStopped",{streamID:e}),this._intentionalDisconnect=!1})}async _createConnection(e,t="viewer"){let i,s;"string"==typeof e?(i=e,this._log("Creating connection to remote peer UUID:",i,"type:",t)):(s=e||{},i=s.uuid,t=s.type||t,this._log("Creating connection with options:",s));const n=await this._getICEConfiguration(),o={uuid:i,type:t,pc:new RTCPeerConnection(n),dataChannel:null,streamID:null,session:null,info:{label:s?.label||null},allowAudio:!0,allowVideo:!0,viewOptions:{},stats:{packetsReceived:0,packetsLost:0,bytesReceived:0,lastStatsTime:Date.now()},lastMessageTime:Date.now(),pingTimer:null,missedPings:0,pendingPing:null};if(s&&(s.streamID&&(o.streamID=s.streamID),s.viewPreferences&&(o.viewPreferences=s.viewPreferences)),o.iceTimer=null,o.iceBundle=[],o.iceBundleDelay=70,o.pc.onicecandidate=e=>{this._handleICECandidate(e,o)},o.pc.oniceconnectionstatechange=()=>{if(this._log(`ICE state for ${i}:`,o.pc.iceConnectionState),"connected"===o.pc.iceConnectionState){if(o.streamID&&this.streams.has(o.streamID)){const e=this.streams.get(o.streamID);e.state="connected",e.lastSeen=Date.now(),o.uuid&&(e.uuid=o.uuid)}this._emit("peerConnected",{uuid:i,connection:o})}else if("failed"===o.pc.iceConnectionState||"disconnected"===o.pc.iceConnectionState){if(o.streamID&&this.streams.has(o.streamID)){const e=this.streams.get(o.streamID);e.state="failed"===o.pc.iceConnectionState?"failed":"disconnected",e.lastSeen=Date.now()}this._handleConnectionFailed(o)}},o.pc.ontrack=e=>{this._log("Track received:",e.track.kind,"from:",i),this._emit("track",{track:e.track,streams:e.streams,uuid:i,streamID:o.streamID})},"publisher"===t){const e=o.pc.createDataChannel("sendChannel",{ordered:!0});o.dataChannel=e,this._setupDataChannel(o,e)}o.pc.ondatachannel=e=>{this._log("Data channel received from:",i),o.dataChannel=e.channel,this._setupDataChannel(o,e.channel)},this.connections.has(i)||this.connections.set(i,{});return this.connections.get(i)[t]=o,o}_isTrackEffectivelyMuted(e){return!e||("ended"===e.readyState||(!1===e.enabled||!0===e.muted))}_sendVideoMutedState(e,t,i=null,s=null){if(!this.state||!this.state.publishing)return;const n={videoMuted:!!t};e&&"string"==typeof e.id&&(n.trackId=e.id),s&&this._log(`Broadcasting videoMuted:${n.videoMuted} (${s})`),i?this._sendDataInternal(n,i,null,"publisher"):this._sendDataInternal(n,null,"publisher","publisher")}_monitorOutboundVideoTrack(e){if(!e||"video"!==e.kind)return;if(this._pendingVideoMuteFinalizers&&this._pendingVideoMuteFinalizers.size&&this._cancelPendingVideoMuteFinalizers(),this._outboundVideoMonitors||(this._outboundVideoMonitors=new Map),this._outboundVideoMonitors.has(e)){const t=this._outboundVideoMonitors.get(e),i=this._isTrackEffectivelyMuted(e);return t&&(t.lastState=i),void(this.state?.publishing&&this._sendVideoMutedState(e,i,null,"refresh"))}const t={track:e,lastState:this._isTrackEffectivelyMuted(e),restoreEnabled:null,restoreStop:null,listeners:[],poller:null,pendingFinalizer:null,finalizing:!1},i=(t,i)=>{const s=i||"update";this._sendVideoMutedState(e,t,null,s),this._emit("publisherVideoMuteState",{track:e,muted:t,reason:s})},s=(s,n={})=>{const{force:o=!1,delay:a=0,cleanup:r=!1}=n,d=()=>this._isTrackEffectivelyMuted(e),l=()=>{t.pendingFinalizer&&(t.pendingFinalizer=null);const n=d();o||n!==t.lastState?(t.lastState=n,i(n,s||"update"),r&&this._unmonitorOutboundVideoTrack(e,{skipSend:!0})):r&&this._unmonitorOutboundVideoTrack(e,{skipSend:!0})};if(t.pendingFinalizer){try{t.pendingFinalizer.cancel()}catch(e){this._log("Error cancelling pending mute finalizer:",e)}t.pendingFinalizer=null}a>0?t.pendingFinalizer=this._scheduleVideoMuteFinalizer(a,l,()=>{t.pendingFinalizer=null}):l()},n=e=>{t.finalizing||(t.finalizing=!0,s(e,{force:!0,delay:500,cleanup:!0}))},o=()=>s("mute"),a=()=>s("unmute"),r=()=>n("ended");if("function"==typeof e.addEventListener&&(e.addEventListener("mute",o),e.addEventListener("unmute",a),e.addEventListener("ended",r),t.listeners.push(["mute",o],["unmute",a],["ended",r])),"function"==typeof e.stop){const i=e.stop.bind(e);try{e.stop=(...e)=>(n("stop"),i(...e)),t.restoreStop=()=>{try{e.stop=i}catch(e){this._log("Failed to restore track.stop:",e)}}}catch(e){this._log("Unable to wrap MediaStreamTrack.stop for monitoring:",e)}}let d=!1;try{d=Object.isExtensible(e)}catch(e){this._log("Unable to inspect MediaStreamTrack extensibility:",e)}if(!!MEDIA_STREAM_TRACK_ENABLED_DESCRIPTOR&&"function"==typeof MEDIA_STREAM_TRACK_ENABLED_DESCRIPTOR.get&&"function"==typeof MEDIA_STREAM_TRACK_ENABLED_DESCRIPTOR.set&&!1!==MEDIA_STREAM_TRACK_ENABLED_DESCRIPTOR.configurable&&d){const{get:i,set:n}=MEDIA_STREAM_TRACK_ENABLED_DESCRIPTOR;try{Object.defineProperty(e,"enabled",{configurable:!0,enumerable:!0,get:()=>i.call(e),set:t=>{const o=i.call(e);n.call(e,t);o!==i.call(e)&&s("enabled-toggle")}}),t.restoreEnabled=()=>{try{delete e.enabled}catch(e){this._log("Failed to restore track.enabled descriptor:",e)}}}catch(e){this._log("Unable to wrap MediaStreamTrack.enabled for monitoring:",e)}}else this._log("Skipping MediaStreamTrack.enabled override; falling back to polling.");t.restoreEnabled||(t.poller=setInterval(()=>s("poll"),250)),this._outboundVideoMonitors.set(e,t),this.state?.publishing?i(t.lastState,"initial"):this._emit("publisherVideoMuteState",{track:e,muted:t.lastState,reason:"initial"})}_unmonitorOutboundVideoTrack(e,t={}){if(!e||!this._outboundVideoMonitors||!this._outboundVideoMonitors.has(e))return;const i=this._outboundVideoMonitors.get(e);if(i){if(i.pendingFinalizer){try{i.pendingFinalizer.cancel()}catch(e){this._log("Error cancelling monitor pending finalizer:",e)}i.pendingFinalizer=null}if(!t.skipSend&&this.state?.publishing&&!i.finalizing){const s="boolean"!=typeof t.forceMuted||t.forceMuted,n="boolean"==typeof t.forceMuted?"force-muted":"monitor-stopped",o="number"==typeof t.delayMs?Math.max(0,t.delayMs):s?500:0,a=()=>{this._sendVideoMutedState(e,s,null,n),this._emit("publisherVideoMuteState",{track:e,muted:s,reason:n})};o>0?i.pendingFinalizer=this._scheduleVideoMuteFinalizer(o,a,()=>{i.pendingFinalizer=null}):a()}if(i.restoreEnabled)try{i.restoreEnabled()}catch(e){this._log("Failed to restore track.enabled descriptor:",e)}if(i.restoreStop)try{i.restoreStop()}catch(e){this._log("Failed to restore track.stop override:",e)}if(i.poller&&(clearInterval(i.poller),i.poller=null),i.listeners&&"function"==typeof e.removeEventListener)for(const[t,s]of i.listeners)try{e.removeEventListener(t,s)}catch(e){}}this._outboundVideoMonitors.delete(e)}_scheduleVideoMuteFinalizer(e,t,i){this._pendingVideoMuteFinalizers||(this._pendingVideoMuteFinalizers=new Set);const s=this,n={timerId:null,finished:!1,flush(){if(!n.finished){n.finished=!0,n.timerId&&(clearTimeout(n.timerId),n.timerId=null),s._pendingVideoMuteFinalizers.delete(n);try{t()}catch(e){s._log("Error dispatching videoMuted finalizer:",e)}if("function"==typeof i)try{i(!0)}catch(e){s._log("Error running mute finalizer onFinish handler:",e)}}},cancel(){if(!n.finished&&(n.finished=!0,n.timerId&&(clearTimeout(n.timerId),n.timerId=null),s._pendingVideoMuteFinalizers.delete(n),"function"==typeof i))try{i(!1)}catch(e){s._log("Error running mute finalizer cancel handler:",e)}}};return n.timerId=setTimeout(()=>n.flush(),e),this._pendingVideoMuteFinalizers.add(n),n}_cancelPendingVideoMuteFinalizers(){if(!this._pendingVideoMuteFinalizers||0===this._pendingVideoMuteFinalizers.size)return;const e=Array.from(this._pendingVideoMuteFinalizers);for(const t of e)try{t.flush()}catch(e){this._log("Error flushing pending mute finalizer:",e)}}_clearAllVideoTrackMonitors(){if(!this._outboundVideoMonitors||0===this._outboundVideoMonitors.size)return void(this._pendingVideoMuteFinalizers&&this._pendingVideoMuteFinalizers.size&&this._cancelPendingVideoMuteFinalizers());this._cancelPendingVideoMuteFinalizers();const e=Array.from(this._outboundVideoMonitors.keys());for(const t of e)this._unmonitorOutboundVideoTrack(t,{skipSend:!0});this._outboundVideoMonitors.clear(),this._pendingVideoMuteFinalizers&&this._pendingVideoMuteFinalizers.clear()}_syncVideoMuteStateToConnection(e){if(e&&"publisher"===e.type&&this.state&&this.state.publishing&&this._outboundVideoMonitors&&0!==this._outboundVideoMonitors.size)for(const t of this._outboundVideoMonitors.values()){const i=t.track,s="boolean"==typeof t.lastState?t.lastState:this._isTrackEffectivelyMuted(i);this._sendVideoMutedState(i,s,e.uuid,"sync")}}_getConnection(e,t=null){const i=this.connections.get(e);return i?t?i[t]||null:i.viewer||i.publisher||null:null}_getConnections(e={}){const t=[];for(const[i,s]of this.connections)if(!e.uuid||i===e.uuid)for(const i of["viewer","publisher"]){const n=s[i];n&&(e.type&&i!==e.type||e.streamID&&n.streamID!==e.streamID||t.push(n))}return t}_setupDataChannel(e,t){this._log(`Setting up data channel for ${e.uuid}, initial state: ${t.readyState}`),t.onopen=()=>{if(this._log(`Data channel opened for ${e.uuid}`),"viewer"===e.type&&e.viewPreferences)try{this._sendDataInternal(e.viewPreferences,e.uuid,null,"viewer"),this._log("Sent track preferences:",e.viewPreferences)}catch(e){this._log("Failed to send preferences:",e.message)}if("publisher"===e.type){try{const i=Object.assign({},this._pendingInfo||{},e.info||{});if(i.label&&(i.label=this._sanitizeLabel(i.label)),i.meta&&(i.meta=this._sanitizeLabel(i.meta)),i.order&&(i.order=this._sanitizeLabel(i.order)),Object.keys(i).length>0){const e={info:i};this._logMessage("OUT",e,"DataChannel"),t.send(JSON.stringify(e)),this._log("Sent publisher info to viewer:",i)}}catch(e){this._log("Failed to send publisher info:",e.message||e)}this._syncVideoMuteStateToConnection(e)}this._startPingMonitoring(e),this._emit("dataChannelOpen",{uuid:e.uuid,type:e.type,streamID:e.streamID,data:{uuid:e.uuid,type:e.type,streamID:e.streamID}})},t.onerror=t=>{this._log(`Data channel error for ${e.uuid}:`,t)},t.onclose=()=>{this._log(`Data channel closed for ${e.uuid}, was in state: ${t.readyState}`),this._stopPingMonitoring(e)},t.onmessage=async i=>{e.lastMessageTime=Date.now();try{const s=JSON.parse(i.data);if(this._logMessage("IN",s,"DataChannel"),s.description&&s.vector&&"string"==typeof s.description)try{const e=await this._decryptMessage(s.description,s.vector);s.description=JSON.parse(e),this._log("Decrypted SDP description from data channel")}catch(e){return void this._log("Failed to decrypt SDP description from data channel:",e)}if(s.candidates&&s.vector&&"string"==typeof s.candidates)try{const e=await this._decryptMessage(s.candidates,s.vector);s.candidates=JSON.parse(e),this._log("Decrypted ICE candidates from data channel")}catch(e){return void this._log("Failed to decrypt ICE candidates from data channel:",e)}if(s.candidate&&s.vector&&"string"==typeof s.candidate)try{const e=await this._decryptMessage(s.candidate,s.vector);s.candidate=JSON.parse(e),this._log("Decrypted ICE candidate from data channel")}catch(e){return void this._log("Failed to decrypt ICE candidate from data channel:",e)}if(s.description)this._log("Received SDP via data channel"),s.UUID=e.uuid,s.session=s.session||e.session,await this._handleSDP(s);else if(s.candidate)this._log("Received ICE candidate via data channel"),s.UUID=e.uuid,await this._handleRemoteICECandidate(s);else if(s.candidates)this._log("Received ICE candidates via data channel"),s.UUID=e.uuid,await this._handleRemoteICECandidates(s);else if("boolean"==typeof s.audio||"boolean"==typeof s.video)this._log("Received track preferences:",s),e.allowAudio=!1!==s.audio,e.allowVideo=!1!==s.video,this.localStream&&this._updateTracksForConnection&&await this._updateTracksForConnection(e);else if(s.info&&"object"==typeof s.info)e.info=Object.assign(e.info||{},s.info),this._emit("peerInfo",{uuid:e.uuid,streamID:e.streamID,info:e.info});else if(s.ping)try{this._sendDataInternal({pong:s.ping},e.uuid,null,"any"),this._log("Sent pong response")}catch(e){this._log("Failed to send pong:",e.message)}else if(s.pong){const t=Date.now()-s.pong;e.pendingPing===s.pong&&(e.pendingPing=null,e.missedPings=0),this._emit("peerLatency",{uuid:e.uuid,latency:t,streamID:e.streamID}),this._log(`Latency to ${"publisher"===e.type?"viewer":"publisher"} ${e.uuid}: ${t}ms`)}else if(s.bye)this._log("Received bye message via data channel"),this._handleBye({UUID:e.uuid});else if(Object.prototype.hasOwnProperty.call(s,"videoMuted")){const t={muted:!!s.videoMuted,trackId:"string"==typeof s.trackId?s.trackId:null,streamID:e.streamID||null,uuid:e.uuid,connectionType:e.type||"unknown",timestamp:Date.now(),raw:s};this._emit("remoteVideoMuteState",t),this._emit("dataReceived",{data:s,uuid:e.uuid,streamID:e.streamID}),this._emit("dataRecieved",{data:s,uuid:e.uuid,streamID:e.streamID})}else if(s.pipe)this._log("Received generic data via pipe"),!s.pipe||"object"!=typeof s.pipe||"subscribe"!==s.pipe.type&&"unsubscribe"!==s.pipe.type&&"channelMessage"!==s.pipe.type&&"request"!==s.pipe.type&&"response"!==s.pipe.type?(this._emit("dataReceived",{data:s.pipe,uuid:e.uuid,streamID:e.streamID}),this._emit("dataRecieved",{data:s.pipe,uuid:e.uuid,streamID:e.streamID})):this._handleDataChannelMessage(s.pipe,e.uuid);else if(s.iceRestartRequest)if(this._log("Received ICE restart request via data channel"),e.pc&&e.pc.restartIce)e.pc.restartIce();else{const i=await e.pc.createOffer({iceRestart:!0});await e.pc.setLocalDescription(i);e.uuid,e.session,e.streamID;if(null!==this._getEffectivePassword())try{const[s,n]=await this._encryptMessage(JSON.stringify(i)),o={UUID:e.uuid,description:s,vector:n,session:e.session};this._logMessage("OUT",o,"DataChannel"),t.send(JSON.stringify(o))}catch(e){this._log("Failed to encrypt offer for ICE restart:",e)}else{const s={UUID:e.uuid,description:i,session:e.session};this._logMessage("OUT",s,"DataChannel"),t.send(JSON.stringify(s))}}}catch(t){this._emit("data",{data:i.data,uuid:e.uuid,streamID:e.streamID})}},t.onerror=e=>{this._log("Data channel error:",e)},t.onclose=()=>{this._log("Data channel closed");try{this._emit("dataChannelClose",{uuid:e.uuid,type:e.type,streamID:e.streamID})}catch(e){}}}async _updateTracksForConnection(e){if(!this.localStream||!e.pc)return;const t=e.pc.getSenders(),i=this.localStream.getAudioTracks(),s=t.find(e=>e.track&&"audio"===e.track.kind);s&&(e.allowAudio?i.length>0&&await s.replaceTrack(i[0]):await s.replaceTrack(null));const n=this.localStream.getVideoTracks(),o=t.find(e=>e.track&&"video"===e.track.kind);o&&(e.allowVideo?n.length>0&&await o.replaceTrack(n[0]):await o.replaceTrack(null))}async _createOffer(e){if(!e)throw new Error("No connection provided to _createOffer");if(!e.pc)throw this._log("ERROR: No peer connection in connection object"),new Error("No peer connection available");try{if(this.localStream&&"publisher"===e.type){const t=this.localStream.getAudioTracks(),i=this.localStream.getVideoTracks();e.allowAudio&&t.length>0&&t.forEach(t=>{e.pc.addTrack(t,this.localStream)}),e.allowVideo&&i.length>0&&i.forEach(t=>{e.pc.addTrack(t,this.localStream)})}await this._applyEncodingPreferencesToConnection(e);const t=await e.pc.createOffer();return await e.pc.setLocalDescription(t),this._log("Created offer successfully"),t}catch(e){throw this._log("Error creating offer:",e.message),e}}async _applyEncodingPreferencesToConnection(e,t){if(!e||!e.pc||"publisher"!==e.type)return;const i=t||this._publishMediaConfig;if(!i)return;if("function"!=typeof e.pc.getSenders)return;const s=e.pc.getSenders();if(!Array.isArray(s)||0===s.length)return;const n="function"==typeof e.pc.getTransceivers?e.pc.getTransceivers():[],o=[];for(const e of s){if(!e||!e.track)continue;const t=e.track.kind;if(!t)continue;const s="video"===t?i.video:"audio"===t?i.audio:null;s&&(s.codec&&this._preferCodecOnSender(e,s.codec,t,n),"number"!=typeof s.maxBitrate&&"number"!=typeof s.minBitrate&&"number"!=typeof s.maxFramerate&&"number"!=typeof s.scaleResolutionDownBy||o.push(this._applySenderEncodingParameters(e,s,t)))}o.length>0&&await Promise.all(o.map(e=>e.catch(e=>this._log("Failed to apply RTP sender parameters:",e))))}async _resetEncodingPreferencesForConnection(e){if(!e||!e.pc||"function"!=typeof e.pc.getSenders)return;const t=e.pc.getSenders();if(!Array.isArray(t)||0===t.length)return;const i=t.map(e=>this._clearSenderEncodingParameters(e));await Promise.all(i.map(e=>e.catch(e=>this._log("Failed to clear RTP sender parameters:",e))))}_preferCodecOnSender(e,t,i,s=[]){if(!e||!t)return;if("undefined"==typeof RTCRtpSender||"function"!=typeof RTCRtpSender.getCapabilities)return;const n=this._normalizeCodecName(t,i);if(!n)return;const o=Array.isArray(s)?s.find(t=>t&&t.sender===e):null;if(!o||"function"!=typeof o.setCodecPreferences)return;const a=RTCRtpSender.getCapabilities(i);if(!a||!Array.isArray(a.codecs)||0===a.codecs.length)return;const r=this._buildCodecPreferenceList(a.codecs,n);if(r)try{o.setCodecPreferences(r),this._log(`Applied codec preference ${n} for ${i}`)}catch(e){this._log("Codec preference application failed:",e)}}async _applySenderEncodingParameters(e,t,i){if(!e||"function"!=typeof e.getParameters||"function"!=typeof e.setParameters)return;let s;try{s=e.getParameters()}catch(e){return void this._log("Unable to read RTP sender parameters:",e)}if(!s)return;Array.isArray(s.encodings)&&0!==s.encodings.length||(s.encodings=[{}]);const n=s.encodings[0];let o=!1;if("number"==typeof t.maxBitrate&&(n.maxBitrate=t.maxBitrate,o=!0),"number"==typeof t.minBitrate&&(n.minBitrate=t.minBitrate,o=!0),"number"==typeof t.maxFramerate&&(n.maxFramerate=t.maxFramerate,o=!0),"number"==typeof t.scaleResolutionDownBy&&(n.scaleResolutionDownBy=t.scaleResolutionDownBy,o=!0),o)try{await e.setParameters(s)}catch(e){this._log("Failed to set RTP sender parameters:",e)}}async _clearSenderEncodingParameters(e){if(!e||"function"!=typeof e.getParameters||"function"!=typeof e.setParameters)return;let t;try{t=e.getParameters()}catch(e){return void this._log("Unable to read RTP sender parameters:",e)}if(!t||!Array.isArray(t.encodings)||0===t.encodings.length)return;const i=t.encodings[0];let s=!1;for(const e of["maxBitrate","minBitrate","maxFramerate","scaleResolutionDownBy"])void 0!==i[e]&&(delete i[e],s=!0);if(s)try{await e.setParameters(t)}catch(e){this._log("Failed to clear RTP sender parameters:",e)}}_normalizeCodecName(e,t){if("string"!=typeof e)return null;let i=e.trim();if(!i)return null;i.startsWith("/")?i=`${t}${i}`:i.includes("/")||(i=`${t}/${i}`);const s=i.split("/");if(2!==s.length)return null;const n=s[0].toLowerCase(),o=s[1].trim().toUpperCase();return n&&o?`${n}/${o}`:null}_buildCodecPreferenceList(e,t){if(!Array.isArray(e)||!t)return null;const i=t.toLowerCase(),s=[],n=[],o=[];for(const t of e){const e=(t&&t.mimeType?t.mimeType:"").toLowerCase();e?e===i?s.push(t):e.endsWith("/rtx")?n.push(t):o.push(t):o.push(t)}if(0===s.length)return null;const a=new Set(s.map(e=>e&&e.preferredPayloadType).filter(e=>void 0!==e)),r=n.filter(e=>{if(!e||!e.sdpFmtpLine)return!1;const t=e.sdpFmtpLine.match(/apt=(\d+)/);return!!t&&a.has(Number(t[1]))});return[...s,...r,...o]}async _applyLocalMediaPreferences(e,t){if(!e||!t)return;const i=t.video;if(!i||!i.resolution)return;const s={},{width:n,height:o,frameRate:a}=i.resolution;if("number"==typeof n&&n>0&&(s.width={ideal:n}),"number"==typeof o&&o>0&&(s.height={ideal:o}),"number"==typeof a&&a>0&&(s.frameRate={ideal:a}),0===Object.keys(s).length)return;const r=e.getVideoTracks?e.getVideoTracks():[];for(const e of r)if(e&&"function"==typeof e.applyConstraints)try{await e.applyConstraints(s),this._log("Applied video constraints:",s)}catch(e){this._log("Failed to apply video constraints:",e)}}async _extractPublisherMediaOptions(e={}){if(!e)return null;const t=[];e.media&&"object"==typeof e.media&&t.push(e.media),e.mediaSettings&&"object"==typeof e.mediaSettings&&t.push(e.mediaSettings),e.webrtc&&"object"==typeof e.webrtc&&t.push(e.webrtc),e.encoding&&"object"==typeof e.encoding&&t.push(e.encoding);const i={video:{},audio:{}};let s=!1;if(t.forEach(e=>{e&&"object"==typeof e&&("object"==typeof e.video&&null!==e.video&&(void 0!==e.video.codec&&(i.video.codec=e.video.codec,s=!0),void 0!==e.video.bitrate&&(i.video.maxBitrate=e.video.bitrate,s=!0),void 0!==e.video.maxBitrate&&(i.video.maxBitrate=e.video.maxBitrate,s=!0),void 0!==e.video.minBitrate&&(i.video.minBitrate=e.video.minBitrate,s=!0),void 0!==e.video.resolution&&(i.video.resolution=e.video.resolution,s=!0),void 0!==e.video.width&&(i.video.width=e.video.width,s=!0),void 0!==e.video.height&&(i.video.height=e.video.height,s=!0),void 0!==e.video.frameRate&&(i.video.frameRate=e.video.frameRate,s=!0)),void 0!==e.videoCodec&&(i.video.codec=e.videoCodec,s=!0),void 0!==e.videoBitrate&&(i.video.maxBitrate=e.videoBitrate,s=!0),void 0!==e.videoResolution&&(i.video.resolution=e.videoResolution,s=!0),void 0!==e.videoWidth&&(i.video.width=e.videoWidth,s=!0),void 0!==e.videoHeight&&(i.video.height=e.videoHeight,s=!0),void 0!==e.videoFrameRate&&(i.video.frameRate=e.videoFrameRate,s=!0),"object"==typeof e.audio&&null!==e.audio&&(void 0!==e.audio.codec&&(i.audio.codec=e.audio.codec,s=!0),void 0!==e.audio.bitrate&&(i.audio.maxBitrate=e.audio.bitrate,s=!0),void 0!==e.audio.maxBitrate&&(i.audio.maxBitrate=e.audio.maxBitrate,s=!0),void 0!==e.audio.minBitrate&&(i.audio.minBitrate=e.audio.minBitrate,s=!0)),void 0!==e.audioCodec&&(i.audio.codec=e.audioCodec,s=!0),void 0!==e.audioBitrate&&(i.audio.maxBitrate=e.audioBitrate,s=!0))}),void 0!==e.videoCodec&&(i.video.codec=e.videoCodec,s=!0),void 0!==e.videoBitrate&&(i.video.maxBitrate=e.videoBitrate,s=!0),void 0!==e.videoResolution&&(i.video.resolution=e.videoResolution,s=!0),void 0!==e.videoWidth&&(i.video.width=e.videoWidth,s=!0),void 0!==e.videoHeight&&(i.video.height=e.videoHeight,s=!0),void 0!==e.videoFrameRate&&(i.video.frameRate=e.videoFrameRate,s=!0),void 0!==e.audioCodec&&(i.audio.codec=e.audioCodec,s=!0),void 0!==e.audioBitrate&&(i.audio.maxBitrate=e.audioBitrate,s=!0),!s)return null;const n={},o={};void 0!==i.video.codec&&(o.codec=i.video.codec);const a=this._parseBitrateSetting(i.video.maxBitrate);null!==a&&(o.maxBitrate=a);const r=this._parseBitrateSetting(i.video.minBitrate);null!==r&&(o.minBitrate=r);const d=this._parseResolutionSetting(i.video.resolution,i.video.width,i.video.height,i.video.frameRate);d&&(o.resolution=d),Object.keys(o).length>0&&(n.video=o);const l={};void 0!==i.audio.codec&&(l.codec=i.audio.codec);const c=this._parseBitrateSetting(i.audio.maxBitrate);null!==c&&(l.maxBitrate=c);const h=this._parseBitrateSetting(i.audio.minBitrate);return null!==h&&(l.minBitrate=h),Object.keys(l).length>0&&(n.audio=l),Object.keys(n).length>0?n:null}_parseBitrateSetting(e){if(null==e||""===e)return null;let t=e,i=1;if("string"==typeof e){const s=e.trim().toLowerCase().match(/^([\d.]+)\s*(kbps|mbps|bps|k|m)?$/);if(!s)return null;if(t=parseFloat(s[1]),Number.isNaN(t))return null;const n=s[2];i=n?"mbps"===n||"m"===n?1e6:"kbps"===n||"k"===n?1e3:1:t<1e4?1e3:1}else{if("number"!=typeof e)return null;if(t=e,t<0)return null;t>0&&t<1e4&&(i=1e3)}const s=Math.round(t*i);return s>0?s:null}_parseResolutionSetting(e,t,i,s){let n=void 0!==t?Number(t):void 0,o=void 0!==i?Number(i):void 0,a=void 0!==s?Number(s):void 0;if(e&&"string"==typeof e){const t=e.trim().toLowerCase().match(/(\d+)x(\d+)(?:@([\d.]+))?/);t&&(n=Number(t[1]),o=Number(t[2]),void 0!==t[3]&&(a=Number(t[3])))}else e&&"object"==typeof e&&(void 0!==e.width&&(n=Number(e.width)),void 0!==e.height&&(o=Number(e.height)),void 0!==e.frameRate&&(a=Number(e.frameRate)),void 0!==e.fps&&void 0===a&&(a=Number(e.fps)));const r={};return Number.isFinite(n)&&n>0&&(r.width=Math.round(n)),Number.isFinite(o)&&o>0&&(r.height=Math.round(o)),Number.isFinite(a)&&a>0&&(r.frameRate=Math.round(a)),Object.keys(r).length>0?r:null}_mergeMediaConfigs(e,t){const i={};if(e&&e.video&&(i.video={...e.video}),e&&e.audio&&(i.audio={...e.audio}),t){const e=e=>{const s=t[e];if(null!==s){if(s&&"object"==typeof s){i[e]||(i[e]={});for(const[t,n]of Object.entries(s))void 0!==n&&(null===n?delete i[e][t]:i[e][t]=n);0===Object.keys(i[e]).length&&delete i[e]}}else delete i[e]};e("video"),e("audio")}return Object.keys(i).length>0?i:null}async _createAnswer(e){if(!e.pc)throw new Error("No peer connection available");const t=await e.pc.createAnswer();return await e.pc.setLocalDescription(t),t}async _handleICECandidate(e,t){if(e.candidate){if(t.dataChannel&&"open"===t.dataChannel.readyState)try{const i={type:"viewer"===t.type?"remote":"local",UUID:t.uuid,candidates:null,session:t.session},s=[{candidate:e.candidate.candidate,sdpMLineIndex:e.candidate.sdpMLineIndex,sdpMid:e.candidate.sdpMid}];if(null!==this._getEffectivePassword())try{const[e,t]=await this._encryptMessage(JSON.stringify(s));i.candidates=e,i.vector=t}catch(e){i.candidates=s}else i.candidates=s;return this._logMessage("OUT",i,"DataChannel"),t.dataChannel.send(JSON.stringify(i)),void this._log("Sent ICE via data channel")}catch(e){this._log("Failed to send ICE via data channel:",e.message)}t.iceBundle.push(e.candidate),null===t.iceTimer&&(t.iceTimer=setTimeout(async()=>{t.iceTimer=null;const e={UUID:t.uuid,type:"viewer"===t.type?"remote":"local",candidates:t.iceBundle,session:t.session},i=t.iceBundle;if(t.iceBundle=[],t.iceBundleDelay=Math.min(1e3,2*t.iceBundleDelay),null!==this._getEffectivePassword())try{const[t,s]=await this._encryptMessage(JSON.stringify(i));e.candidates=t,e.vector=s,this._log("Encrypted ICE candidates bundle")}catch(t){this._log("Failed to encrypt ICE candidates:",t),e.candidates=i}this._sendMessageWS(e),this._log(`Sent ICE bundle with ${i.length} candidates`)},t.iceBundleDelay))}else this._log("Empty ICE candidate, gathering complete")}_handleConnectionFailed(e){this._log("Connection failed:",e.uuid,"type:",e.type),this._stopPingMonitoring(e),e.pc&&e.pc.close();try{this._emit("peerDisconnected",{uuid:e.uuid,type:e.type,streamID:e.streamID})}catch(e){}"viewer"===e.type&&e.streamID&&!this._intentionalDisconnect&&(this._log("Viewer connection failed for stream:",e.streamID),this._failedViewerConnections||(this._failedViewerConnections=new Map),this._failedViewerConnections.set(e.streamID,{uuid:e.uuid,viewOptions:e.viewOptions||{},retryCount:0,lastRetry:Date.now()}),setTimeout(()=>{this._retryFailedViewerConnection(e.streamID)},2e3));const t=this.connections.get(e.uuid);t&&(delete t[e.type],t.viewer||t.publisher||this.connections.delete(e.uuid)),this._emit("connectionFailed",{uuid:e.uuid,type:e.type,streamID:e.streamID})}async _retryFailedViewerConnection(e){const t=this._failedViewerConnections.get(e);if(t)if(this._intentionalDisconnect)this._failedViewerConnections.delete(e);else{this._log("Retrying viewer connection for stream:",e),t.retryCount++;try{await this.view(e,t.viewOptions),this._failedViewerConnections.delete(e),this._log("Successfully reconnected to stream:",e)}catch(i){this._log("Retry failed for stream:",e,i.message);const s=Math.min(3e4,2e3*Math.pow(2,Math.min(t.retryCount-1,5)));setTimeout(()=>{this._retryFailedViewerConnection(e)},s)}}}_generateSession(){const e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let t="";for(let i=0;i<8;i++)t+=e.charAt(Math.floor(62*Math.random()));return t}async _handleSignalingMessage(e){e&&e.id&&!this.state.uuid&&(this.state.uuid=e.id,this._log("Captured UUID:",e.id)),(e.request||e.description||e.candidate||e.candidates)&&this._log("Incoming message type:",e.request||(e.description?"description":"other")),e.description?await this._handleSDP(e):e.candidate?await this._handleRemoteICECandidate(e):e.candidates?await this._handleRemoteICECandidates(e):"joinroom"===e.request?await this._handleJoinRoom(e):"play"===e.request?await this._handlePlayRequest(e):"listing"===e.request?await this._handleListing(e):"videoaddedtoroom"===e.request?await this._handleVideoAddedToRoom(e):"someonejoined"===e.request?await this._handleSomeoneJoined(e):"error"===e.request?this._handleError(e):"alert"===e.request?this._handleAlert(e):"transferred"===e.request?await this._handleTransferred(e):"offerSDP"===e.request?this._handleOfferSDPRequest(e):e.rejected?this._handleRejected(e):void 0!==e.approved?this._handleApproved(e):e.bye?this._handleBye(e):e.hangup?this._handleHangup(e):void 0!==e.pipe&&e.__fallback&&this._handleFallbackData(e)}async _handleSDP(e){if(null!==this._getEffectivePassword()&&e.vector&&"string"==typeof e.description)try{const t=await this._decryptMessage(e.description,e.vector);e.description=JSON.parse(t),this._log("Decrypted SDP description")}catch(e){return void this._log("Failed to decrypt SDP description:",e)}"offer"===e.description.type?await this._handleOfferSDP(e):"answer"===e.description.type&&await this._handleAnswerSDP(e)}async _handleOfferSDP(e){this._log("Handling offer from:",e.UUID,"session:",e.session),void 0!==e.streamID&&await this._ensurePasswordHash();const t=void 0!==e.streamID?this._stripHashFromStreamID(e.streamID):void 0,i=this.connections.get(e.UUID);let s=i&&i.viewer?i.viewer:null;if(s&&s.session&&e.session&&s.session!==e.session){this._log("Found existing connection with different session:",s.session,"vs",e.session),this._log("Closing old connection due to session mismatch");try{s.pc&&s.pc.close()}catch(e){}i&&delete i.viewer,s=null}if(s)!s.session&&e.session&&(s.session=e.session),s.streamID||void 0===t||(s.streamID=t);else{s=await this._createConnection(e.UUID,"viewer"),void 0!==t&&(s.streamID=t),s.session=e.session;const i=void 0!==t?this._pendingViews.get(t):null;i&&i.options?(s.viewPreferences={audio:!1!==i.options.audio,video:!1!==i.options.video},i.options.label&&(s.viewPreferences.info={label:i.options.label}),s.viewOptions=i.options,this._log("Attached view preferences to connection:",s.viewPreferences)):(s.viewPreferences={audio:!0,video:!0},s.viewOptions={audio:!0,video:!0},this._log("No pending view found, using default preferences:",s.viewPreferences)),this._log(`Created viewer connection for offer - UUID: ${e.UUID}, streamID: ${s.streamID}, session: ${e.session}`)}try{await s.pc.setRemoteDescription(new RTCSessionDescription(e.description));const t=await this._createAnswer(s),i={UUID:e.UUID,session:e.session,streamID:e.streamID};if(null!==this._getEffectivePassword())try{const[e,s]=await this._encryptMessage(JSON.stringify(t));i.description=e,i.vector=s,this._log("Encrypted answer SDP")}catch(e){this._log("Failed to encrypt answer:",e),i.description=t}else i.description=t;if(s.dataChannel&&"open"===s.dataChannel.readyState){if(null!==this._getEffectivePassword()){const e={description:i.description,vector:i.vector};this._logMessage("OUT",e,"DataChannel"),s.dataChannel.send(JSON.stringify(e))}else{const e={description:t};this._logMessage("OUT",e,"DataChannel"),s.dataChannel.send(JSON.stringify(e))}this._log("Sent answer via data channel")}else this._sendMessageWS(i),this._log("Sent answer via WebSocket with session:",e.session)}catch(e){this._log("Error handling offer:",e),this._emit("error",{error:"Failed to handle offer",details:e.message})}}async _handleAnswerSDP(e){this._log("Handling answer from:",e.UUID,"session:",e.session);let t=this._getConnection(e.UUID,"publisher");if(t||(t=this._findConnection(e.UUID),t))if(e.session&&t.session&&e.session!==t.session)this._log("Session mismatch - ignoring answer. Expected:",t.session,"Got:",e.session);else try{await t.pc.setRemoteDescription(new RTCSessionDescription(e.description)),this._log("Remote description set successfully")}catch(e){this._log("Error handling answer:",e),this._emit("error",{error:"Failed to handle answer",details:e.message})}else this._log("No connection found for answer")}async _handleRemoteICECandidate(e){if(null!==this._getEffectivePassword()&&e.vector&&"string"==typeof e.candidate)try{const t=await this._decryptMessage(e.candidate,e.vector);e.candidate=JSON.parse(t),this._log("Decrypted ICE candidate")}catch(e){return void this._log("Failed to decrypt ICE candidate:",e)}let t=null;if(t="remote"===e.type?this._getConnection(e.UUID,"publisher"):"local"===e.type?this._getConnection(e.UUID,"viewer"):this._getConnection(e.UUID),!t||!t.pc)return this._log(`No connection found for ICE candidate with type: ${e.type}, UUID: ${e.UUID}`),void this._log("Available connections:",Array.from(this.connections.entries()).map(([e,t])=>`UUID: ${t.uuid}, type: ${t.type}, streamID: ${t.streamID}`));if(e.session&&t.session&&e.session!==t.session)this._log("Session mismatch - ignoring ICE candidate. Expected:",t.session,"Got:",e.session);else try{e.candidate&&!e.candidate.type&&(e.candidate.type="host"),await t.pc.addIceCandidate(new RTCIceCandidate(e.candidate)),this._log("Added ICE candidate")}catch(e){this._log("Error adding ICE candidate:",e)}}async _handleRemoteICECandidates(e){if(null!==this._getEffectivePassword()&&e.vector&&"string"==typeof e.candidates)try{const t=await this._decryptMessage(e.candidates,e.vector);e.candidates=JSON.parse(t),this._log("Decrypted ICE candidates bundle")}catch(e){return void this._log("Failed to decrypt ICE candidates:",e)}this._log(`Received ICE candidates bundle - type: ${e.type}, UUID: ${e.UUID}, session: ${e.session}`),this._log(`Candidates count: ${e.candidates?e.candidates.length:0}`);let t=null;if(t="remote"===e.type?this._getConnection(e.UUID,"publisher"):"local"===e.type?this._getConnection(e.UUID,"viewer"):this._getConnection(e.UUID),!t||!t.pc)return this._log(`No connection found for ICE candidates bundle with type: ${e.type}, UUID: ${e.UUID}`),void this._log("Available connections:",Array.from(this.connections.entries()).map(([e,t])=>`UUID: ${t.uuid}, type: ${t.type}, streamID: ${t.streamID}`));if(e.session&&t.session&&e.session!==t.session)this._log("Session mismatch - ignoring ICE candidates. Expected:",t.session,"Got:",e.session);else for(const i of e.candidates)try{i.candidate&&await t.pc.addIceCandidate(new RTCIceCandidate(i))}catch(e){this._log("Error adding ICE candidate:",e)}}async _handleJoinRoom(e){if(this._log("Received join room request:",e),!this.state.publishing)return void this._log("Not publishing, ignoring join request");const t=await this._createConnection(e.UUID,"publisher");this._pendingLabel&&"string"==typeof this._pendingLabel&&(t.info=t.info||{},t.info.label=this._sanitizeLabel(this._pendingLabel)),this._pendingInfo&&"object"==typeof this._pendingInfo&&(t.info=Object.assign(t.info||{},this._pendingInfo)),t.streamID=this.state.streamID,void 0===e.audio&&void 0===e.video||(t.allowAudio=!1!==e.audio,t.allowVideo=!1!==e.video);try{const i=await this._createOffer(t);let s=this.state.streamID;{const e=this._getEffectivePassword();null!==e&&(this._passwordHash||(this._passwordHash=await this._generateHash(e+this.salt,6)),s=this.state.streamID+this._passwordHash)}const n={UUID:this.state.uuid,session:e.session||t.uuid,streamID:s};if(e.session&&(this._sessionIDs[e.UUID]=e.session,this._remoteSessionIDs[e.UUID]=e.session),null!==this._getEffectivePassword())try{const[e,t]=await this._encryptMessage(JSON.stringify(i));n.description=e,n.vector=t,this._log("Encrypted offer SDP")}catch(e){this._log("Failed to encrypt offer:",e),n.description=i}else n.description=i;this._sendMessageWS(n),this._log("Sent offer to viewer")}catch(e){this._log("Error creating offer for viewer:",e)}}async _handlePlayRequest(e){this._log("Received play request for:",e.streamID,"from:",e.UUID),await this._ensurePasswordHash();const t=this._stripHashFromStreamID(e.streamID);if(!this.state.publishing||this.state.streamID!==t)return void this._log("Not publishing this stream");const i=await this._createConnection(e.UUID,"publisher");this._pendingLabel&&"string"==typeof this._pendingLabel&&(i.info=i.info||{},i.info.label=this._sanitizeLabel(this._pendingLabel)),this._pendingInfo&&"object"==typeof this._pendingInfo&&(i.info=Object.assign(i.info||{},this._pendingInfo)),i.streamID=this.state.streamID,i.session=this._generateSession(),void 0===e.audio&&void 0===e.video||(i.allowAudio=!1!==e.audio,i.allowVideo=!1!==e.video);try{const t=await this._createOffer(i);let s=this.state.streamID;{const e=this._getEffectivePassword();null!==e&&(this._passwordHash||(this._passwordHash=await this._generateHash(e+this.salt,6)),s=this.state.streamID+this._passwordHash)}const n={UUID:e.UUID,session:i.session,streamID:s};if(null!==this._getEffectivePassword())try{const[e,i]=await this._encryptMessage(JSON.stringify(t));n.description=e,n.vector=i,this._log("Encrypted offer SDP")}catch(e){this._log("Failed to encrypt offer:",e),n.description=t}else n.description=t;this._sendMessageWS(n),this._log("Sent offer to viewer with session:",i.session)}catch(e){this._log("Error creating offer for play request:",e)}}async _ensurePasswordHash(){if(!1===this.password||null===this.password)return this._passwordHash=null,this._passwordHashKey=null,this._passwordHashPromise=null,void(this._passwordHashPromiseKey=null);const e=this._getEffectivePassword();if(null===e)return this._passwordHash=null,this._passwordHashKey=null,this._passwordHashPromise=null,void(this._passwordHashPromiseKey=null);const t=this.salt,i=`${e}:${t}`;if(this._passwordHashKey&&this._passwordHashKey!==i&&(this._passwordHash=null,this._passwordHashKey=null),this._passwordHash&&this._passwordHashKey===i&&"string"==typeof this._passwordHash&&this._passwordHash.length>0)return;if(this._passwordHashPromise){try{await this._passwordHashPromise}catch(e){this._log("Failed to ensure password hash:",e)}if(this._passwordHash&&this._passwordHashKey===i&&"string"==typeof this._passwordHash&&this._passwordHash.length>0)return}const s=e,n=this._generateHash(s+t,6);this._passwordHashPromise=n,this._passwordHashPromiseKey=i;try{const e=await n;this._passwordHashPromise===n&&this._passwordHashPromiseKey===i&&(this._passwordHash=e,this._passwordHashKey=i)}catch(e){this._log("Failed to precompute password hash:",e)}finally{this._passwordHashPromise===n&&(this._passwordHashPromise=null,this._passwordHashPromiseKey=null)}}_stripHashFromStreamID(e){if(!e||"string"!=typeof e)return e;if(!this._passwordHash||"string"!=typeof this._passwordHash)return e;const t=this._passwordHash.length;if(0===t||e.length<=t)return e;return e.slice(-t)===this._passwordHash?e.slice(0,-t):e}async _handleListing(e){if(this._log("Processing listing"),await this._ensurePasswordHash(),this._emit("_roomJoined"),e.list&&Array.isArray(e.list)){const t=e.list.map(e=>"string"==typeof e?this._stripHashFromStreamID(e):e&&e.streamID?{...e,streamID:this._stripHashFromStreamID(e.streamID)}:e),i=Date.now();t.forEach(e=>{const t="string"==typeof e?e:e.streamID;if(t){const s=this.streams.get(t);this.streams.set(t,{firstSeen:s?.firstSeen||i,lastSeen:i,uuid:e.UUID||e.uuid||s?.uuid||null,state:"available"})}}),this._emit("listing",{list:t,raw:e}),t.forEach((i,s)=>{const n=e.list[s];i&&(i.streamID||"string"==typeof i)&&this._emit("listing",{streamID:i.streamID||i,uuid:n&&n.UUID||n&&n.uuid,label:i.label,list:t})})}else this._emit("listing",{streamID:this._stripHashFromStreamID(e.streamID),uuid:e.UUID,label:e.label,raw:e});this._emit("peerListing",e)}async _handleVideoAddedToRoom(e){await this._ensurePasswordHash();const t=this._stripHashFromStreamID(e.streamID);if(this._log("Video added to room:",t),this._pendingViews.has(t)){this._log("Found pending view for newly available stream:",t);const e=this._pendingViews.get(t);this._log("Re-requesting stream that just became available:",t),this._pendingViews.delete(t),setTimeout(async()=>{try{await this.view(t,e.options),this._log("Successfully connected to newly available stream:",t)}catch(e){this._log("Failed to connect to newly available stream:",e.message)}},100)}if(this._emit("videoaddedtoroom",{streamID:t,uuid:e.UUID||e.uuid,raw:e}),this._emit("streamAdded",{streamID:t,uuid:e.UUID||e.uuid}),t&&this.streams){const i=Date.now(),s=this.streams.get(t);this.streams.set(t,{firstSeen:s?.firstSeen||i,lastSeen:i,uuid:e.UUID||e.uuid||s?.uuid||null,state:s?.state||"available"})}}async _handleSomeoneJoined(e){await this._ensurePasswordHash();const t=e.streamID?this._stripHashFromStreamID(e.streamID):null;this._log("Someone joined:",t||e.UUID),this._emit("videoaddedtoroom",{streamID:t,uuid:e.UUID||e.uuid,raw:e}),this._emit("userJoined",e),this._emit("someoneJoined",e)}_handleUserLeft(e){this._log("User left:",e.UUID);const t=this.connections.get(e.UUID);if(t){for(const e of["viewer","publisher"]){const i=t[e];i&&i.pc&&i.pc.close()}this.connections.delete(e.UUID)}this._emit("userLeft",e)}_handleError(e){this._log("Error from server:",e.message,"Code:",e.code),this._emit("error",{error:e.message,code:e.code,details:e})}_handleAlert(e){this._log("Alert from server:",e.message),e.message&&e.message.includes("Stream ID is already in use")&&(this.state.publishing=!1,this.state.streamID=null,this._log("Publishing failed due to stream ID conflict")),this._emit("alert",{message:e.message,raw:e})}async _handleTransferred(e){this._log("Transferred to new room"),this._emit("transferred",{list:e.list,director:e.director,raw:e}),await this._handleListing(e)}async _handleOfferSDPRequest(e){if(this._log("Server requesting offer SDP for viewer:",e.UUID),!this.state.publishing)return void this._log("Not publishing, ignoring offerSDP request");const t=await this._createConnection(e.UUID,"publisher");this._pendingLabel&&"string"==typeof this._pendingLabel&&(t.info=t.info||{},t.info.label=this._sanitizeLabel(this._pendingLabel)),this._pendingInfo&&"object"==typeof this._pendingInfo&&(t.info=Object.assign(t.info||{},this._pendingInfo)),t.streamID=this.state.streamID,t.session=this._generateSession();try{const i=await this._createOffer(t);let s=this.state.streamID;{const e=this._getEffectivePassword();null!==e&&(this._passwordHash||(this._passwordHash=await this._generateHash(e+this.salt,6)),s=this.state.streamID+this._passwordHash)}const n={UUID:e.UUID,session:t.session,streamID:s};if(null!==this._getEffectivePassword())try{const[e,t]=await this._encryptMessage(JSON.stringify(i));n.description=e,n.vector=t,this._log("Encrypted offer SDP")}catch(e){this._log("Failed to encrypt offer:",e),n.description=i}else n.description=i;this._sendMessageWS(n),this._log("Sent offer to viewer with session:",t.session)}catch(e){this._log("Error creating offer for viewer:",e)}}_handleRejected(e){this._log("Connection rejected:",e.rejected),this._emit("rejected",e)}_handleApproved(e){this._log("Connection approved"),this._emit("approved",e)}_handleBye(e){this._log("Received bye from:",e.UUID);const t=this.connections.get(e.UUID);if(t){const i=t.viewer;let s=!1,n=null,o=null;i&&i.streamID&&!this._intentionalDisconnect&&(s=!0,n=i.streamID,o=i.viewOptions||{audio:!0,video:!0},this._log("Viewer connection will be retried after bye from publisher:",n));for(const e of["viewer","publisher"]){const i=t[e];i&&(this._stopPingMonitoring(i),i.pc&&i.pc.close())}this.connections.delete(e.UUID),s&&(this._failedViewerConnections||(this._failedViewerConnections=new Map),this._failedViewerConnections.set(n,{uuid:e.UUID,viewOptions:o,retryCount:0,lastRetry:Date.now()}),this._log("Scheduling viewer reconnection after bye message"),setTimeout(()=>{this._retryFailedViewerConnection(n)},2e3))}this._emit("bye",e);try{this._emit("peerDisconnected",{uuid:e.UUID})}catch(e){}}_handleHangup(e){this._log("Received hangup from:",e.UUID);const t=this.connections.get(e.UUID);if(t){for(const e of["viewer","publisher"]){const i=t[e];i&&(this._stopPingMonitoring(i),i.pc&&i.pc.close())}this.connections.delete(e.UUID)}this._emit("hangup",e);try{this._emit("peerDisconnected",{uuid:e.UUID})}catch(e){}}_handleFallbackData(e){this._log("Received fallback data via WebSocket from:",e.UUID);const t={...e};delete t.__fallback;try{if(t&&t.pipe&&"object"==typeof t.pipe){const i=t.pipe.type;"subscribe"!==i&&"unsubscribe"!==i||this._handleDataChannelMessage(t.pipe,e.UUID)}}catch(e){}this._emit("dataReceived",{data:t.pipe,uuid:e.UUID,fallback:!0}),this._emit("dataRecieved",{data:t.pipe,uuid:e.UUID,fallback:!0}),this._emit("data",{UUID:e.UUID,data:t})}_sendMessageWS(e){this.signaling&&this.signaling.readyState===WebSocket.OPEN?(this._logMessage("OUT",e,"WebSocket"),this.signaling.send(JSON.stringify(e))):this._log("WebSocket not ready, queuing message")}_emit(e,t={}){this.dispatchEvent(new CustomEvent(e,{detail:t}))}_log(...e){this.debug&&console.log("[VDONinjaSDK]",...e)}_logMessage(e,t,i){if(!this.debug)return;const s=JSON.parse(JSON.stringify(t));s.description&&("string"==typeof s.description?s.description=s.description.substring(0,10)+"...":s.description.sdp&&(s.description.sdp=s.description.sdp.substring(0,10)+"...")),s.candidate&&("string"==typeof s.candidate?s.candidate=s.candidate.substring(0,10)+"...":s.candidate.candidate&&(s.candidate.candidate=s.candidate.candidate.substring(0,10)+"...")),s.candidates&&("string"==typeof s.candidates?s.candidates=s.candidates.substring(0,10)+"...":Array.isArray(s.candidates)&&(s.candidates=s.candidates.map(e=>"string"==typeof e?e.substring(0,10)+"...":e.candidate?{...e,candidate:e.candidate.substring(0,10)+"..."}:e)));const n="IN"===e?"color: green":"color: blue",o="IN"===e?"← INBOUND":"→ OUTBOUND";console.log(`%c${o} [${i}]:`,n,JSON.stringify(s,null,2))}_generateStreamID(){try{if("undefined"!=typeof crypto){if("function"==typeof crypto.randomUUID)return crypto.randomUUID().replace(/-/g,"").slice(0,12);if("function"==typeof crypto.getRandomValues){const e=new Uint8Array(9);crypto.getRandomValues(e);let t="";for(let i=0;i<e.length;i++)t+=(31&e[i]).toString(36);return t}}}catch(e){}return Math.random().toString(36).substring(2,15)}_generateSession(){return Math.random().toString(36).substring(2,10)}_generateUUID(){return"undefined"!=typeof crypto&&crypto.randomUUID?crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}_setupCryptoUtils(){if(this._encoder=new TextEncoder,this._decoder=new TextDecoder,!this._saltProvidedViaOptions&&"undefined"!=typeof window&&window.location){const e=window.location.hostname;if(this._log("Setting salt based on hostname:",e),"vdo.ninja"===e||"steveseguin.github.io"===e)this.salt="vdo.ninja";else if(["vdo.ninja","rtc.ninja","versus.cam","socialstream.ninja"].includes(e.split(".").slice(-2).join(".")))this.salt=e.split(".").slice(-2).join(".");else{/^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$|^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/.test(e)||"localhost"===e||""===e?this.salt="vdo.ninja":this.salt=e}}else this._saltProvidedViaOptions||(this.salt="vdo.ninja");this._log("Salt set to:",this.salt)}_convertStringToArrayBufferView(e){return this._encoder.encode(e)}_toHexString(e){return Array.from(e,e=>("0"+(255&e).toString(16)).slice(-2)).join("")}_toByteArray(e){const t=new Uint8Array(e.length/2);for(let i=0;i<e.length;i+=2)t[i/2]=parseInt(e.substr(i,2),16);return t}async _encryptMessage(e,t=null){if(!t){const e=this._getEffectivePassword();if(null===e)throw new Error("Password not set for encryption");t=e+this.salt}const i=crypto.getRandomValues(new Uint8Array(16));try{const s=await crypto.subtle.digest({name:"SHA-256"},this._convertStringToArrayBufferView(t)),n=await crypto.subtle.importKey("raw",s,{name:"AES-CBC"},!1,["encrypt","decrypt"]),o=await crypto.subtle.encrypt({name:"AES-CBC",iv:i},n,this._convertStringToArrayBufferView(e)),a=new Uint8Array(o);return[this._toHexString(a),this._toHexString(i)]}catch(e){throw this._log("Encryption error:",e),e}}async _decryptMessage(e,t,i=null){if(!i){const e=this._getEffectivePassword();if(null===e)throw new Error("Password not set for decryption");i=e+this.salt}const s=this._toByteArray(e),n=this._toByteArray(t);try{const e=await crypto.subtle.digest({name:"SHA-256"},this._convertStringToArrayBufferView(i)),t=await crypto.subtle.importKey("raw",e,{name:"AES-CBC"},!1,["encrypt","decrypt"]),o=await crypto.subtle.decrypt({name:"AES-CBC",iv:n},t,s);return this._decoder.decode(new Uint8Array(o))}catch(e){throw this._log("Decryption error:",e),e}}async _generateHash(e,t=!1){const i=this._encoder.encode(e),s=await crypto.subtle.digest("SHA-256",i);let n=new Uint8Array(s);return t&&(n=n.slice(0,parseInt(parseInt(t)/2))),this._toHexString(n)}async _hashRoom(e,t){this._log(`Hashing room: "${e}" with password: "${t}" and salt: "${this.salt}"`);const i=await this._generateHash(e+t+this.salt,16);return this._log(`Room hash result: ${i}`),i}async _hashStreamID(e,t){return this._passwordHash||(this._passwordHash=await this._generateHash(t+this.salt,6)),e+this._passwordHash}async _getHashedRoom(){if(!this.state.room)return null;const e=this._getEffectivePassword();return null===e?this.state.room:await this._hashRoom(this.state.room,e)}_getTimezone(){try{return-1*(new Date).getTimezoneOffset()}catch(e){return 0}}_compareTurnDeltas(e,t){return e.delta-t.delta}_processTURNs(e){const t=this._getTimezone();for(let i=0;i<e.length;i++){let s=Math.abs(e[i].tz-t);Math.abs(s-1440)<s&&(s=Math.abs(s-1440)),e[i].delta=s}e.sort(this._compareTurnDeltas);const i=[];let s=0,n=0;for(let t=0;t<e.length;t++){const o=e[t];this.forceTcpMode&&o.udp||(o.udp&&n<2?(i.push(o),n+=1):!o.udp&&s<1&&(i.push(o),s+=1))}return i}_getStorage(e){if("undefined"==typeof localStorage)return null;try{const t=localStorage.getItem(e);if(!t)return null;const i=JSON.parse(t);return i.expiry&&Date.now()>i.expiry?(localStorage.removeItem(e),null):i.value}catch(e){return this._log("Storage read error:",e),null}}_setStorage(e,t,i=60){if("undefined"!=typeof localStorage)try{const s={value:t,expiry:Date.now()+60*i*1e3};localStorage.setItem(e,JSON.stringify(s))}catch(e){this._log("Storage write error:",e)}}async _fetchTURNServers(){const e=this._getStorage("turnlist");if(e)return this._log("Using cached TURN servers"),e;const t=Date.now();let i="https://turnservers.vdo.ninja/";if("undefined"!=typeof window&&window.location){const e=window.location.hostname;"rtc.ninja"===e?i="https://turnservers.rtc.ninja/":"vdo.socialstream.ninja"===e&&(i="https://turnservers.socialstream.ninja/")}try{const e=new AbortController,s=setTimeout(()=>e.abort(),2e3),n=await fetch(`${i}?ts=${t}`,{signal:e.signal});if(clearTimeout(s),!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const o=await n.json();if(!o.servers||!Array.isArray(o.servers))throw new Error("Invalid server response");return this._setStorage("turnlist",o.servers,this.turnCacheTTL),o.servers}catch(e){return this._log("Failed to fetch TURN servers, using fallback:",e.message),[{username:"steve",credential:"setupYourOwnPlease",urls:["turns:www.turn.obs.ninja:443"],tz:300,udp:!1,locale:"cae1"},{username:"steve",credential:"setupYourOwnPlease",urls:["turn:turn-cae1.vdo.ninja:3478"],tz:300,udp:!0,locale:"cae1"},{username:"vdoninja",credential:"theyBeSharksHere",urls:["turn:turn-usw2.vdo.ninja:3478"],tz:480,udp:!0,locale:"usw2"},{username:"vdoninja",credential:"PolandPirat",urls:["turn:turn-eu4.vdo.ninja:3478"],tz:-70,udp:!0,locale:"pol1"},{username:"steve",credential:"setupYourOwnPlease",urls:["turns:turn.obs.ninja:443"],tz:-60,udp:!1,locale:"de1"},{username:"steve",credential:"setupYourOwnPlease",urls:["turn:turn-eu1.vdo.ninja:3478"],tz:-60,udp:!0,locale:"de1"},{username:"vdoninja",credential:"EastSideRepresentZ",urls:["turn:turn-use1.vdo.ninja:3478"],tz:300,udp:!0,locale:"use1"}]}}async _setupTURNServers(){return!1===this.turnServers?(this._log("TURN servers disabled"),void(this._turnList=[])):Array.isArray(this.turnServers)?(this._log("Using custom TURN servers"),void(this._turnList=this.turnServers)):(this._turnPromise||(this._turnPromise=this._fetchTURNServers().then(e=>(this._turnList=this._processTURNs(e),this._log("TURN servers loaded:",this._turnList.length),this._turnList))),void await this._turnPromise)}async _getICEConfiguration(){null===this._turnList&&await this._setupTURNServers();const e=[...this.stunServers];this._turnList&&this._turnList.length>0&&e.push(...this._turnList);const t={iceServers:e,sdpSemantics:"unified-plan"};return this.forceTURN&&(t.iceTransportPolicy="relay",this._log("Forcing TURN relay mode for privacy")),t}clearTURNCache(){if("undefined"!=typeof localStorage)try{localStorage.removeItem("turnlist"),this._log("TURN server cache cleared")}catch(e){this._log("Failed to clear TURN cache:",e)}this._turnList=null,this._turnPromise=null}async addTrack(e,t){if(!e||!t)throw new Error("Track and stream are required");if(!this.state.publishing)throw new Error("Must be publishing to add tracks");this.localStream?this.localStream.addTrack(e):this.localStream=t,"video"===e.kind&&this._monitorOutboundVideoTrack(e);for(const[i,s]of this.connections){const n=s.publisher;if(n&&n.pc){if("audio"===e.kind&&!n.allowAudio||"video"===e.kind&&!n.allowVideo)continue;try{n.pc.addTrack(e,t),await this._applyEncodingPreferencesToConnection(n);const s=await n.pc.createOffer();await n.pc.setLocalDescription(s);const o={UUID:n.uuid,session:n.session};if(null!==this._getEffectivePassword())try{const[e,t]=await this._encryptMessage(JSON.stringify(s));o.description=e,o.vector=t}catch(e){this._log("Failed to encrypt offer:",e),o.description=s}else o.description=s;this._sendMessageWS(o),this._log(`Added ${e.kind} track to connection: ${i}`),this._emit("trackAdded",{track:e,uuid:n.uuid,streamID:n.streamID})}catch(e){this._log("Error adding track:",e)}}}}async removeTrack(e){if(!e)throw new Error("Track is required");"video"===e.kind&&this._unmonitorOutboundVideoTrack(e,{forceMuted:!0}),this.localStream&&this.localStream.removeTrack(e),e.stop();for(const[t,i]of this.connections){const s=i.publisher;if(s&&s.pc){const i=s.pc.getSenders().find(t=>t.track===e);if(i)try{s.pc.removeTrack(i);const n=await s.pc.createOffer();await s.pc.setLocalDescription(n);const o={UUID:s.uuid,session:s.session};if(null!==this._getEffectivePassword())try{const[e,t]=await this._encryptMessage(JSON.stringify(n));o.description=e,o.vector=t}catch(e){this._log("Failed to encrypt offer:",e),o.description=n}else o.description=n;this._sendMessageWS(o),this._log(`Removed ${e.kind} track from connection: ${t}`),this._emit("trackRemoved",{track:e,uuid:s.uuid,streamID:s.streamID})}catch(e){this._log("Error removing track:",e)}}}}async replaceTrack(e,t){if(!e||!t)throw new Error("Both old and new tracks are required");if(e.kind!==t.kind)throw new Error("Tracks must be of the same kind (audio/video)");"video"===e.kind&&this._unmonitorOutboundVideoTrack(e,{skipSend:!0}),this.localStream&&(this.localStream.removeTrack(e),this.localStream.addTrack(t)),"video"===t.kind&&this._monitorOutboundVideoTrack(t);for(const[i,s]of this.connections){const n=s.publisher;if(n&&n.pc){const s=n.pc.getSenders().find(t=>t.track===e);if(s)try{await s.replaceTrack(t),await this._applyEncodingPreferencesToConnection(n),this._log(`Replaced ${t.kind} track in connection: ${i}`),this._emit("trackReplaced",{oldTrack:e,newTrack:t,uuid:n.uuid,streamID:n.streamID})}catch(e){this._log("Error replacing track:",e)}}}e.stop()}async updatePublisherMedia(e={}){if(null==e)return this._publishMediaConfig;if(!0===e.clear||!0===e.reset||null===e.media){if(this._publishMediaConfig=null,this.state&&this.state.publishing&&this.connections&&"function"==typeof this.connections.values){const e=[];for(const t of this.connections.values())t&&t.publisher&&e.push(this._resetEncodingPreferencesForConnection(t.publisher));e.length>0&&await Promise.all(e.map(e=>e.catch(e=>this._log("Failed to reset encoding preferences:",e))))}return null}const t=await this._extractPublisherMediaOptions(e);if(!t)return this._publishMediaConfig;if(this._publishMediaConfig=this._mergeMediaConfigs(this._publishMediaConfig,t),this.localStream&&await this._applyLocalMediaPreferences(this.localStream,this._publishMediaConfig),this.state&&this.state.publishing&&this.connections&&"function"==typeof this.connections.values){const e=[];for(const t of this.connections.values())t&&t.publisher&&e.push(this._applyEncodingPreferencesToConnection(t.publisher));e.length>0&&await Promise.all(e.map(e=>e.catch(e=>this._log("Failed to update encoding preferences:",e))))}return this._publishMediaConfig}async getStats(e=null){const t={},i=e?[this.connections.get(e)].filter(Boolean):Array.from(this.connections.values());for(const e of i)if(e&&e.pc)try{const i=await e.pc.getStats();t[e.uuid]=Array.from(i.values())}catch(e){this._log("Error getting stats:",e)}return t}_sendDataInternal(e,t=null,i=null,s="any",n=!1){let o=!1;const a="string"==typeof e?e:JSON.stringify(e),r=new Set;if(t&&!i){const i=this.connections.get(t);if(i){const n=s=>{const n=i[s];if(n&&n.dataChannel&&"open"===n.dataChannel.readyState&&!r.has(n))try{return this._logMessage("OUT",e,"DataChannel"),n.dataChannel.send(a),r.add(n),o=!0,this._log(`Sent to ${t} via ${s} connection`),!0}catch(e){this._log(`Error sending via ${s} connection:`,e)}return!1};"publisher"===s?n("publisher"):"viewer"===s?n("viewer"):"any"===s?n("publisher")||n("viewer"):"all"===s&&(n("publisher"),n("viewer"))}}else{const n=this._getConnections({uuid:t,type:i});if("all"===s){for(const t of n)if(t&&t.dataChannel&&"open"===t.dataChannel.readyState&&!r.has(t))try{this._logMessage("OUT",e,"DataChannel"),t.dataChannel.send(a),r.add(t),o=!0}catch(e){this._log("Error sending data:",e)}}else{const t=new Map;for(const e of n)t.has(e.uuid)||t.set(e.uuid,{}),t.get(e.uuid)[e.type]=e;for(const[i,n]of t){const t=t=>{const i=n[t];if(i&&i.dataChannel&&"open"===i.dataChannel.readyState&&!r.has(i))try{return this._logMessage("OUT",e,"DataChannel"),i.dataChannel.send(a),r.add(i),o=!0,!0}catch(e){this._log("Error sending data:",e)}return!1};"publisher"===s?t("publisher"):"viewer"===s?t("viewer"):"any"!==s&&s||t("publisher")||t("viewer")}}}if(!o&&n&&this.state.connected&&this.signaling&&this.signaling.readyState===WebSocket.OPEN)try{const i={...e,__fallback:!0};t&&(i.UUID=t),this._sendMessageWS(i),o=!0,this._log("Sent via WebSocket fallback"+(t?` to ${t}`:" (broadcast)"))}catch(e){this._log("Error sending via WebSocket fallback:",e)}return!o&&t?this._log(`Failed to send data to UUID: ${t}, type: ${i||"any"} - no data channel or WebSocket available`):o||this._log("Failed to send data - no data channels or WebSocket available"),o}sendData(e,t=null){const i={pipe:e};let s=!1,n="any";const o=(()=>{for(const[,e]of this.connections||[])for(const t of["viewer","publisher"])if(e[t]&&e[t].dataChannel&&"open"===e[t].dataChannel.readyState)return!0;return!1})();if(this.state&&this.state.connected?o||t&&t.allowFallback||(console.warn('[VDONinja SDK] No open data channels yet. Wait for "dataChannelOpen" before sendData(), or pass { allowFallback: true } to use WebSocket fallback.'),this._emit("alert",{message:"No open data channels yet. Wait for dataChannelOpen or set allowFallback: true."})):(console.warn("[VDONinja SDK] sendData() called while not connected. Call connect() first."),this._emit("error",{error:"sendData() called while not connected. Call connect() before sending data."})),"string"==typeof t)return this._sendDataInternal(i,t,null,n,s);if("object"==typeof t&&null!==t){const e={...t};if(e.UUID&&!e.uuid&&(e.uuid=e.UUID),e.channel&&!e.preference&&(e.preference=e.channel),e.prefer&&!e.preference&&(e.preference=e.prefer),"pcs"===e.type&&(e.type="publisher"),"rpcs"===e.type&&(e.type="viewer"),"any"!==e.type&&"all"!==e.type||e.uuid||e.streamID||(e.preference||(e.preference=e.type),delete e.type),"pcs"===e.preference&&(e.preference="publisher"),"rpcs"===e.preference&&(e.preference="viewer"),Object.prototype.hasOwnProperty.call(e,"allowFallback")&&(s=e.allowFallback),Object.prototype.hasOwnProperty.call(e,"preference")&&(n=e.preference),e.uuid&&!e.type&&!e.streamID)return this._sendDataInternal(i,e.uuid,null,n,s);if(e.uuid||e.type||e.streamID){if(e.streamID&&!e.uuid){const t=this._getConnections({streamID:e.streamID,type:e.type}),o=new Map;for(const e of t)o.has(e.uuid)||o.set(e.uuid,[]),o.get(e.uuid).push(e);let a=!1;for(const[e]of o)this._sendDataInternal(i,e,null,n,s)&&(a=!0);return a}{const t="viewer"===e.type||"publisher"===e.type?e.type:null;return this._sendDataInternal(i,e.uuid,t,n,s)}}}return this._sendDataInternal(i,null,null,n,s)}sendPing(e=null){const t=Date.now();if(e){const i=this.connections.get(e);i&&i.publisher&&(i.publisher.pendingPing=t),i&&i.viewer&&(i.viewer.pendingPing=t)}else for(const[e,i]of this.connections)i.publisher&&(i.publisher.pendingPing=t),i.viewer&&(i.viewer.pendingPing=t);return this._sendDataInternal({ping:t},e,null,"any",!1)}subscribe(e){this._subscriptions||(this._subscriptions=new Set);const t=Array.isArray(e)?e:[e];for(const e of t)this._subscriptions.add(e);this.state.connected&&this.sendData({type:"subscribe",channels:t},{allowFallback:!0}),this._emit("subscribed",{channels:t})}unsubscribe(e){if(!this._subscriptions)return;const t=Array.isArray(e)?e:[e];for(const e of t)this._subscriptions.delete(e);this.state.connected&&this.sendData({type:"unsubscribe",channels:t},{allowFallback:!0}),this._emit("unsubscribed",{channels:t})}getSubscriptions(){return this._subscriptions?Array.from(this._subscriptions):[]}getPeerSubscriptions(e){if(!e||!this._peerSubscriptions)return[];const t=this._peerSubscriptions.get(e);return t?Array.from(t):[]}publishToChannel(e,t,i="all"){const s={type:"channelMessage",channel:e,data:t,timestamp:Date.now()};return"all"===i?this.sendData(s):this.sendData(s,i)}async request(e,t,i,s=5e3){return new Promise((n,o)=>{const a=this._generateUUID(),r=setTimeout(()=>{delete this._pendingRequests[a],o(new Error(`Request timeout: ${e}`))},s);this._pendingRequests||(this._pendingRequests={}),this._pendingRequests[a]={resolve:n,reject:o,timeoutId:r};this.sendData({type:"request",requestType:e,requestId:a,data:t},i)||(clearTimeout(r),delete this._pendingRequests[a],o(new Error("Failed to send request")))})}respond(e,t,i){return this.sendData({type:"response",requestId:e,data:t},i)}onRequest(e,t){this._requestHandlers||(this._requestHandlers={}),this._requestHandlers[e]=t}_handleDataChannelMessage(e,t){if("subscribe"===e.type||"unsubscribe"===e.type){this._peerSubscriptions||(this._peerSubscriptions=new Map);const i=Array.isArray(e.channels)?e.channels:null!=e.channels?[e.channels]:[];if("subscribe"===e.type){const e=this._peerSubscriptions.get(t)||new Set;i.forEach(t=>e.add(t)),this._peerSubscriptions.set(t,e);try{this._emit("peerSubscribed",{uuid:t,channels:i.slice(),allChannels:Array.from(e)})}catch(e){}}else{const e=this._peerSubscriptions.get(t)||new Set;i.forEach(t=>e.delete(t)),this._peerSubscriptions.set(t,e);try{this._emit("peerUnsubscribed",{uuid:t,channels:i.slice(),allChannels:Array.from(e)})}catch(e){}}return}if("channelMessage"!==e.type){if("request"!==e.type){if("response"!==e.type)this._emit("dataReceived",{data:e,uuid:t}),this._emit("dataRecieved",{data:e,uuid:t});else if(this._pendingRequests&&this._pendingRequests[e.requestId]){const t=this._pendingRequests[e.requestId];clearTimeout(t.timeoutId),e.data&&e.data.error?t.reject(new Error(e.data.error)):t.resolve(e.data),delete this._pendingRequests[e.requestId]}}else if(this._requestHandlers&&this._requestHandlers[e.requestType]){const i=this._requestHandlers[e.requestType];Promise.resolve(i(e.data,t)).then(i=>{this.respond(e.requestId,i,t)}).catch(i=>{this.respond(e.requestId,{error:i.message||"Request handler error"},t)})}}else this._subscriptions&&this._subscriptions.has(e.channel)&&this._emit("channelMessage",{channel:e.channel,data:e.data,timestamp:e.timestamp,uuid:t})}_startPingMonitoring(e){this.autoPingViewer&&e&&"viewer"===e.type&&(e.pingTimer&&clearInterval(e.pingTimer),e.pingTimer=setInterval(()=>{if(!e.dataChannel||"open"!==e.dataChannel.readyState)return;const t=Date.now();if(e.pendingPing){if(!(t-e.pendingPing>=Math.max(1.5*this.autoPingInterval,this.autoPingInterval+5e3)))return;if(e.missedPings=(e.missedPings||0)+1,this._log(`Viewer auto-ping missed #${e.missedPings} for ${e.uuid}`),e.missedPings>=2)return this._log(`Viewer initiating ICE restart after ${e.missedPings} missed pings for ${e.uuid}`),this._initiateICERestart(e),e.missedPings=0,void(e.pendingPing=null);e.pendingPing=null}this.sendPing(e.uuid)},Math.max(1e3,this.autoPingInterval)))}_stopPingMonitoring(e){e.pingTimer&&(clearInterval(e.pingTimer),e.pingTimer=null)}async _initiateICERestart(e){if(e.pc)try{e.dataChannel&&"open"===e.dataChannel.readyState&&(e.dataChannel.send(JSON.stringify({iceRestartRequest:!0})),this._log("Sent ICE restart request via data channel"));const t=await e.pc.createOffer({iceRestart:!0});await e.pc.setLocalDescription(t);let i=e.streamID;{const t=this._getEffectivePassword();null!==t&&(this._passwordHash||(this._passwordHash=await this._generateHash(t+this.salt,6)),i=e.streamID+this._passwordHash)}const s={UUID:e.uuid,session:e.session,streamID:i};if(null!==this._getEffectivePassword())try{const[e,i]=await this._encryptMessage(JSON.stringify(t));s.description=e,s.vector=i}catch(e){this._log("Failed to encrypt ICE restart offer:",e),s.description=t}else s.description=t;this._sendMessageWS(s),this._log("Sent ICE restart offer"),this._emit("iceRestart",{uuid:e.uuid,streamID:e.streamID,reason:"missed_pings"})}catch(e){this._log("Error initiating ICE restart:",e)}else this._log("Cannot restart ICE - no peer connection")}async quickPublish(e={}){return this.state.connected||await this.connect(),e.room&&!this.state.roomJoined&&await this.joinRoom({room:e.room,password:e.password}),await this.publish(e.stream,e)}async quickView(e={}){if(!e.streamID)throw new Error("streamID is required");this.state.connected||await this.connect(),e.room&&!this.state.roomJoined&&await this.joinRoom({room:e.room,password:e.password});const t=(!e||!0!==e.dataOnly)&&e.audio,i=(!e||!0!==e.dataOnly)&&e.video;return await this.view(e.streamID,{audio:t,video:i,label:e.label})}async autoConnect(e,t){const i={mode:"half",view:void 0,label:void 0,password:void 0,streamID:void 0,filter:void 0};let s;if(s="string"==typeof e?{...i,room:e,filter:t}:{...i,...e||{}},!s||!s.room)throw new Error("autoConnect: room is required");const n="full"===s.mode?{audio:!0,video:!0}:{audio:!1,video:!1},o=s.view?{...n,...s.view}:n,a=new Set,r=new Set;let d=null;const l=s.filter,c=e=>{const t=(e=>"string"==typeof e?{streamID:e}:{streamID:e?.streamID,uuid:e?.UUID||e?.uuid,label:e?.label})(e);if(!t.streamID)return!1;if(t.streamID===d)return!1;if("function"==typeof l)try{if(!l(t))return!1}catch(e){}else if(l instanceof RegExp){if(!l.test(t.streamID))return!1}else if("string"==typeof l){if(t.streamID!==l)return!1}else if(l&&"object"==typeof l){if(Array.isArray(l.include)&&!l.include.includes(t.streamID))return!1;if(Array.isArray(l.exclude)&&l.exclude.includes(t.streamID))return!1;if(l.prefix&&"string"==typeof l.prefix&&!t.streamID.startsWith(l.prefix))return!1}return"half"!==s.mode||t.streamID<d},h=async e=>{if(e&&!a.has(e)&&!r.has(e)){a.add(e),r.add(e);try{await this.quickView({streamID:e,audio:o.audio,video:o.video,label:o.label})}catch(t){a.delete(e)}finally{r.delete(e)}}},u=async e=>{if("string"!=typeof d)return;const t=e?.detail?.list;if(Array.isArray(t))for(const e of t)c(e)&&await h("string"==typeof e?e:e.streamID);else if(e?.detail?.streamID){const t=e.detail.streamID;c({streamID:t,uuid:e.detail.uuid,label:e.detail.label})&&await h(t)}},p=async e=>{if("string"!=typeof d)return;const t=e?.detail?.streamID;c({streamID:t})&&await h(t)};this.addEventListener("listing",u),this.addEventListener("videoaddedtoroom",p),this.state.connected||await this.connect(),this.state.roomJoined&&this.state.room===s.room||await this.joinRoom({room:s.room,password:s.password}),d=await this.announce({streamID:s.streamID,label:s.label});try{if(this.streams&&this.streams.size>0)for(const[e,t]of this.streams)c({streamID:e,uuid:t?.uuid})&&await h(e)}catch(e){}return{stop:()=>{this.removeEventListener("listing",u),this.removeEventListener("videoaddedtoroom",p)},streamID:d}}play(e,t){return this.view(e,t)}watch(e,t){return this.view(e,t)}startViewing(e,t){return this.view(e,t)}stream(e,t){return this.publish(e,t)}broadcast(e,t){return this.publish(e,t)}startPublishing(e,t){return this.publish(e,t)}share(e,t){return this.publish(e,t)}stop(e){return this.stopViewing(e)}stopPlaying(e){return this.stopViewing(e)}stopWatching(e){return this.stopViewing(e)}stopStreaming(){return this.stopPublishing()}stopBroadcasting(){return this.stopPublishing()}stopSharing(){return this.stopPublishing()}unpublish(){return this.stopPublishing()}join(e){return this.joinRoom(e)}enterRoom(e){return this.joinRoom(e)}enter(e){return this.joinRoom(e)}leave(){return this.leaveRoom()}exitRoom(){return this.leaveRoom()}exit(){return this.leaveRoom()}send(e,t){return this.sendData(e,t)}sendMessage(e,t){return this.sendData(e,t)}emit(e,t){return this.sendData(e,t)}broadcast(e,t){return e instanceof MediaStream?this.publish(e,t):this.sendData(e,t)}quickPlay(e){return this.quickView(e)}quickWatch(e){return this.quickView(e)}quickSubscribe(e={}){const t={...e};return"dataOnly"in t||"audio"in t||"video"in t||(t.dataOnly=!0),this.quickView(t)}quickStream(e){return this.quickPublish(e)}quickBroadcast(e){return this.quickPublish(e)}quickShare(e){return this.quickPublish(e)}}"undefined"!=typeof module&&module.exports?(module.exports=t,module.exports.VDONinja=t):"function"==typeof define&&define.amd?define([],function(){return t}):(e.VDONinjaSDK=t,e.VDONinja=t)}("undefined"!=typeof window?window:global);